{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ex3","provenance":[],"machine_shape":"hm","authorship_tag":"ABX9TyPcFLAfaj3zuxe+Cy2aHDyC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"_FdvKVpJq4p4","executionInfo":{"status":"ok","timestamp":1601591019742,"user_tz":300,"elapsed":220787,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"0bb09b85-fb5d-4788-8b9c-f844b63adb83","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"RBdYBVGEycOF"},"source":["import pandas as pd\n","import numpy as np\n","from numpy import load\n","from matplotlib import pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hOG52__zy6Hd"},"source":["eyetraindf = pd.read_csv('/content/gdrive/My Drive/tesis/eyepacs/trainLabels.csv')\n","eyetraindf1 = eyetraindf[eyetraindf.image != '43862_left']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Kz8HTldny7Lq"},"source":["ytrain1 = pd.get_dummies(eyetraindf1['level']).values"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EZTBKiXPy-4J"},"source":["xtrain1 = load('/content/gdrive/My Drive/tesis/eyepacs/xtrainchf128.npy')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vNIbmrRLRZWx","executionInfo":{"status":"ok","timestamp":1601322724579,"user_tz":300,"elapsed":389,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"d9a6e990-acc8-413b-ff64-c629401b8914","colab":{"base_uri":"https://localhost:8080/","height":419}},"source":["eyetraindf[20000:20100]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image</th>\n","      <th>level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20000</th>\n","      <td>25217_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20001</th>\n","      <td>25217_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20002</th>\n","      <td>25221_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20003</th>\n","      <td>25221_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20004</th>\n","      <td>25222_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20095</th>\n","      <td>25346_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20096</th>\n","      <td>25351_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20097</th>\n","      <td>25351_right</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20098</th>\n","      <td>25352_left</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20099</th>\n","      <td>25352_right</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows Ã— 2 columns</p>\n","</div>"],"text/plain":["             image  level\n","20000   25217_left      0\n","20001  25217_right      0\n","20002   25221_left      0\n","20003  25221_right      0\n","20004   25222_left      0\n","...            ...    ...\n","20095  25346_right      0\n","20096   25351_left      0\n","20097  25351_right      2\n","20098   25352_left      2\n","20099  25352_right      0\n","\n","[100 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"T87xVhXuOGdc","executionInfo":{"status":"ok","timestamp":1601322768069,"user_tz":300,"elapsed":531,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"5ccf1a9c-cdf2-4cbf-80c0-90730853d9b3","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["eyetraindf1[20400:20450]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image</th>\n","      <th>level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20400</th>\n","      <td>25739_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20401</th>\n","      <td>25739_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20402</th>\n","      <td>25740_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20403</th>\n","      <td>25740_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20404</th>\n","      <td>25741_left</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20405</th>\n","      <td>25741_right</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>20406</th>\n","      <td>25743_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20407</th>\n","      <td>25743_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20408</th>\n","      <td>25745_left</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20409</th>\n","      <td>25745_right</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20410</th>\n","      <td>25747_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20411</th>\n","      <td>25747_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20412</th>\n","      <td>25748_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20413</th>\n","      <td>25748_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20414</th>\n","      <td>25751_left</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20415</th>\n","      <td>25751_right</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20416</th>\n","      <td>25752_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20417</th>\n","      <td>25752_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20418</th>\n","      <td>25754_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20419</th>\n","      <td>25754_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20420</th>\n","      <td>25755_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20421</th>\n","      <td>25755_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20422</th>\n","      <td>25756_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20423</th>\n","      <td>25756_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20424</th>\n","      <td>25758_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20425</th>\n","      <td>25758_right</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20426</th>\n","      <td>25762_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20427</th>\n","      <td>25762_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20428</th>\n","      <td>25763_left</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20429</th>\n","      <td>25763_right</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20430</th>\n","      <td>25765_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20431</th>\n","      <td>25765_right</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20432</th>\n","      <td>25767_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20433</th>\n","      <td>25767_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20434</th>\n","      <td>25770_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20435</th>\n","      <td>25770_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20436</th>\n","      <td>25776_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20437</th>\n","      <td>25776_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20438</th>\n","      <td>25778_left</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20439</th>\n","      <td>25778_right</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20440</th>\n","      <td>25780_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20441</th>\n","      <td>25780_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20442</th>\n","      <td>25781_left</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20443</th>\n","      <td>25781_right</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20444</th>\n","      <td>25783_left</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20445</th>\n","      <td>25783_right</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20446</th>\n","      <td>25784_left</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20447</th>\n","      <td>25784_right</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20448</th>\n","      <td>25787_left</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20449</th>\n","      <td>25787_right</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             image  level\n","20400   25739_left      0\n","20401  25739_right      0\n","20402   25740_left      0\n","20403  25740_right      0\n","20404   25741_left      2\n","20405  25741_right      4\n","20406   25743_left      0\n","20407  25743_right      0\n","20408   25745_left      2\n","20409  25745_right      2\n","20410   25747_left      0\n","20411  25747_right      0\n","20412   25748_left      0\n","20413  25748_right      0\n","20414   25751_left      2\n","20415  25751_right      2\n","20416   25752_left      0\n","20417  25752_right      0\n","20418   25754_left      0\n","20419  25754_right      0\n","20420   25755_left      0\n","20421  25755_right      0\n","20422   25756_left      0\n","20423  25756_right      0\n","20424   25758_left      0\n","20425  25758_right      1\n","20426   25762_left      0\n","20427  25762_right      0\n","20428   25763_left      2\n","20429  25763_right      2\n","20430   25765_left      0\n","20431  25765_right      2\n","20432   25767_left      0\n","20433  25767_right      0\n","20434   25770_left      0\n","20435  25770_right      0\n","20436   25776_left      0\n","20437  25776_right      0\n","20438   25778_left      2\n","20439  25778_right      2\n","20440   25780_left      0\n","20441  25780_right      0\n","20442   25781_left      0\n","20443  25781_right      0\n","20444   25783_left      2\n","20445  25783_right      2\n","20446   25784_left      2\n","20447  25784_right      2\n","20448   25787_left      1\n","20449  25787_right      2"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"owD8gaKWNZzY","executionInfo":{"status":"ok","timestamp":1601324895008,"user_tz":300,"elapsed":731,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"7d60cbad-d607-47be-8e0a-95994132ca97","colab":{"base_uri":"https://localhost:8080/","height":286}},"source":["plt.imshow(xtrain1[20413])\n","print(ytrain1[20413])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1 0 0 0 0]\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"K5KWpxGEzLcP","executionInfo":{"status":"ok","timestamp":1601317725693,"user_tz":300,"elapsed":517,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"d19bcf68-6a5c-4109-f22f-9713c9966879","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(ytrain1.shape)\n","print(xtrain1.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(35125, 5)\n","(35125, 224, 224, 3)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7Ke-S3IB-XEt"},"source":["from sklearn.model_selection import train_test_split"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7WXyjq1b-r9C"},"source":["x_train1, x_train2, y_train1, y_train2 = train_test_split(\n","    xtrain1, ytrain1, \n","    test_size=0.50, \n","    random_state=2020\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XAEIfoIs-1Kp","executionInfo":{"status":"ok","timestamp":1601317908452,"user_tz":300,"elapsed":367,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"b4f5df73-d288-4acd-8d28-db4a88f6f572","colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["print(x_train1.shape)\n","print(x_train2.shape)\n","print(y_train1.shape)\n","print(y_train2.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(17562, 224, 224, 3)\n","(17563, 224, 224, 3)\n","(17562, 5)\n","(17563, 5)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"C7Mf0uv3AGCE"},"source":["x_train_1, x_train_2, y_train_1, y_train_2 = train_test_split(\n","    x_train1, y_train1, \n","    test_size=0.50, \n","    random_state=2020\n",")\n","\n","x_train1=0\n","y_train1 =0\n","\n","x_train_3, x_train_4, y_train_3, y_train_4 = train_test_split(\n","    x_train2, y_train2, \n","    test_size=0.50, \n","    random_state=2020\n",")\n","\n","x_train2=0\n","y_train2 =0\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"q38GFUeiAarn","executionInfo":{"status":"ok","timestamp":1601318603501,"user_tz":300,"elapsed":386,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"3a339692-46c8-4019-b519-46a1561a4b55","colab":{"base_uri":"https://localhost:8080/","height":153}},"source":["print(x_train_1.shape)\n","print(y_train_1.shape)\n","print(x_train_2.shape)\n","print(y_train_2.shape)\n","print(x_train_3.shape)\n","print(y_train_3.shape)\n","print(x_train_4.shape)\n","print(y_train_4.shape)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(8781, 224, 224, 3)\n","(8781, 5)\n","(8781, 224, 224, 3)\n","(8781, 5)\n","(8781, 224, 224, 3)\n","(8781, 5)\n","(8782, 224, 224, 3)\n","(8782, 5)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"G7K7WmDVGpaq"},"source":["x_train1, x_train2, y_train1, y_train2 = train_test_split(\n","    x_train_1, y_train_1, \n","    test_size=0.50, \n","    random_state=2020\n",")\n","\n","x_train3, x_train4, y_train3, y_train4 = train_test_split(\n","    x_train_2, y_train_2, \n","    test_size=0.50, \n","    random_state=2020\n",")\n","\n","\n","x_train5, x_train6, y_train5, y_train6 = train_test_split(\n","    x_train_3, y_train_3, \n","    test_size=0.50, \n","    random_state=2020\n",")\n","\n","\n","x_train7, x_train8, y_train7, y_train8 = train_test_split(\n","    x_train_4, y_train_4, \n","    test_size=0.50, \n","    random_state=2020\n",")\n","\n","x_train_1= 0\n","y_train_1 = 0\n","x_train_2= 0\n","y_train_2= 0\n","x_train_3= 0"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"st6h5yFoGq-X","executionInfo":{"status":"ok","timestamp":1601320146175,"user_tz":300,"elapsed":2393,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"8a767af1-3c35-4e75-a8de-b972bacd3a1d","colab":{"base_uri":"https://localhost:8080/","height":289}},"source":["print(x_train1.shape)\n","print(y_train1.shape)\n","print(x_train2.shape)\n","print(y_train2.shape)\n","print(x_train3.shape)\n","print(y_train3.shape)\n","print(x_train4.shape)\n","print(y_train4.shape)\n","print(x_train5.shape)\n","print(y_train5.shape)\n","print(x_train6.shape)\n","print(y_train6.shape)\n","print(x_train7.shape)\n","print(y_train7.shape)\n","print(x_train8.shape)\n","print(y_train8.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(4390, 224, 224, 3)\n","(4390, 5)\n","(4391, 224, 224, 3)\n","(4391, 5)\n","(4390, 224, 224, 3)\n","(4390, 5)\n","(4391, 224, 224, 3)\n","(4391, 5)\n","(4390, 224, 224, 3)\n","(4390, 5)\n","(4391, 224, 224, 3)\n","(4391, 5)\n","(4391, 224, 224, 3)\n","(4391, 5)\n","(4391, 224, 224, 3)\n","(4391, 5)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tC4_qJYlIqh1"},"source":["np.save('/content/gdrive/My Drive/tesis2/x_train8.npy',x_train8)\n","np.save('/content/gdrive/My Drive/tesis2/y_train8.npy',y_train8)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vY2OlSxBV4FS"},"source":["x_train_1=np.load('/content/gdrive/My Drive/tesis2/x_train1.npy')\n","y_train_1=np.load('/content/gdrive/My Drive/tesis2/y_train1.npy')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8IOxZpbTWKXy","executionInfo":{"status":"ok","timestamp":1601325190979,"user_tz":300,"elapsed":587,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"ef16634a-f9bc-458d-e2f6-6da63befa98e","colab":{"base_uri":"https://localhost:8080/","height":286}},"source":["plt.imshow(x_train_1[100])\n","print(y_train_1[100])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1 0 0 0 0]\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"RU3gbl_WbxGT"},"source":["x_train_1= x_train_1/255.0"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Iu6-rSiIbsN6"},"source":["from sklearn.model_selection import train_test_split"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZGRIrg4LWCOM","executionInfo":{"status":"ok","timestamp":1601340781333,"user_tz":300,"elapsed":361,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"0c2259fd-5440-4a32-8abe-68ddaef0a2a9","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["ytrain1.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(35125, 5)"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"25fBvIzwbbye"},"source":["x_train1, x_val1, y_train1, y_val1 = train_test_split(\n","    xtrain1, ytrain1, \n","    test_size=0.10, \n","    random_state=2020\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HmvlfE2Ub4w8","executionInfo":{"status":"ok","timestamp":1601396206234,"user_tz":300,"elapsed":707,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"74161c2a-52f8-4b0d-d010-0d5c75111574","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(x_train1.shape)\n","print(x_val1.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(31612, 128, 128, 3)\n","(3513, 128, 128, 3)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_1V2SGJZc8uy"},"source":["from keras.preprocessing.image import ImageDataGenerator"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"A9LL1_BtWdph"},"source":["BATCH_SIZE = 16"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"j7K2dm7Qb_bN"},"source":["BATCH_SIZE = 64\n","\n","train_datagen = ImageDataGenerator(rotation_range=25,                               \n","                                   shear_range=0.01,\n","                                   zoom_range=[0.9, 1.25],\n","                                   horizontal_flip=True,\n","                                   vertical_flip=True,)\n","                                   #data_format='channels_last',\n","                                   #samplewise_center=True,)\n","                                   #samplewise_std_normalization= True)\n","                                   #featurewise_center=True, \n","                                   #featurewise_std_normalization=True)\n","\n","\n","\n","#Usar el generador original\n","data_generator = train_datagen.flow(x_train1, y_train1, batch_size=BATCH_SIZE, seed=2020)\n","\n","test_datagen = ImageDataGenerator(zoom_range=[0.9, 1.25],\n","                                   horizontal_flip=True,\n","                                   vertical_flip=True,)\n","                                   #samplewise_center=True,\n","                                   #samplewise_std_normalization= True)\n","                                   #featurewise_center=True, \n","                                   #featurewise_std_normalization=True)\n","\n","vdata_gen =  test_datagen.flow(x_val1, y_val1, batch_size=BATCH_SIZE, seed=2020)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FFy3OvFTE3cH","executionInfo":{"status":"ok","timestamp":1601591272869,"user_tz":300,"elapsed":805,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"55dd0bf8-791b-456d-fa2c-23218dbafb22","colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["train_datagen=ImageDataGenerator(rescale=1./255,rotation_range=360,brightness_range=[0.5, 1.5],\n","                                     zoom_range=[1, 1.2],zca_whitening=True,horizontal_flip=True,\n","                                     vertical_flip=True,fill_mode='constant',cval=0.)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:337: UserWarning: This ImageDataGenerator specifies `zca_whitening`, which overrides setting of `featurewise_center`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"xy4UZBsBEK5h"},"source":["from sklearn.preprocessing import MultiLabelBinarizer"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oip9bPdREQKE"},"source":["def multiple_outputs(generator,X, Y, batch_size):\n","    gen = generator.flow(X, Y, batch_size=batch_size, seed=2020)\n","    \n","    mlb = MultiLabelBinarizer(classes = range(N_CLASSES))\n","    \n","    while True:\n","        gnext = gen.next()\n","        yield gnext[0], [np.argmax(gnext[1],axis = -1),gnext[1],mlb.fit_transform([list(range(x+1)) for x in np.argmax(gnext[1],axis = -1)])]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8mZIjOB6FINz"},"source":["train_generator = multiple_outputs(generator = train_datagen, X=x_train1, Y=y_train1,\n","                                   batch_size=BATCH_SIZE)\n","     \n","valid_generator = multiple_outputs(generator = train_datagen, X=x_val1,Y=y_val1,\n","                                   batch_size=BATCH_SIZE)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0hxq-PlDC8NY"},"source":["N_CLASSES = eyetraindf1['level'].nunique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZjVlYSztdpou","executionInfo":{"status":"ok","timestamp":1601334488977,"user_tz":300,"elapsed":1206,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"db6cc4ce-1322-4059-8795-5be6e8de368a","colab":{"base_uri":"https://localhost:8080/","height":286}},"source":["plt.imshow(data_generator[0][0][8])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f94a22f5160>"]},"metadata":{"tags":[]},"execution_count":35},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"1ZgW4fbyeLY5"},"source":["import tensorflow as tf\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rBP7s2nEoqap"},"source":["N_CLASSES = 5"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"v9Ov2dktG9kv"},"source":["from keras.layers import Input,GlobalAveragePooling2D,Dropout,Dense,Activation,BatchNormalization,GlobalMaxPooling2D,concatenate,Flatten\n","from keras import applications\n","from keras import optimizers,Model,Sequential\n","from keras import backend as K"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5DC5wkBlGwIj","executionInfo":{"status":"ok","timestamp":1601591310600,"user_tz":300,"elapsed":9698,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"8026328c-9680-4f79-ec6c-7ad8e75ecfca","colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["input_tensor = Input(shape=(128, 128, 3))\n","base_model = applications.ResNet50(weights='imagenet', include_top=False,input_tensor=input_tensor)\n","\n","\n","x1 = GlobalAveragePooling2D()(base_model.output)\n","x1 = BatchNormalization()(x1)\n","\n","x2 = GlobalMaxPooling2D()(base_model.output)\n","x2 = BatchNormalization()(x2)\n","\n","x = concatenate([x1,x2])\n","\n","# Regression Head\n","xr = Dense(2048, activation='relu')(x)\n","xr = Dropout(0.5)(xr)\n","xr = Dense(1,activation = 'linear',name = 'regression_output')(xr)\n","\n","# Classification Head\n","xc = Dense(2048, activation='relu')(x)\n","xc = Dropout(0.5)(xc)\n","xc = Dense(N_CLASSES,activation = 'softmax',name = 'classification_output')(xc)\n","\n","# Ordinal Regression Head\n","xo = Dense(2048, activation='relu')(x)\n","xo = Dropout(0.5)(xo)\n","xo = Dense(N_CLASSES,activation = 'softmax',name = 'ordinal_regression_output')(xo)\n","\n","model = Model(inputs = [input_tensor], outputs = [xr,xc,xo])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94773248/94765736 [==============================] - 2s 0us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pepdHks0HRe8","executionInfo":{"status":"ok","timestamp":1601408502647,"user_tz":300,"elapsed":810,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"b691330d-998d-4998-f783-4516a7542bae","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["for layer in model.layers:\n","    layer.trainable = True\n","model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"functional_1\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_1 (InputLayer)            [(None, 128, 128, 3) 0                                            \n","__________________________________________________________________________________________________\n","conv1_pad (ZeroPadding2D)       (None, 134, 134, 3)  0           input_1[0][0]                    \n","__________________________________________________________________________________________________\n","conv1_conv (Conv2D)             (None, 64, 64, 64)   9472        conv1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv1_bn (BatchNormalization)   (None, 64, 64, 64)   256         conv1_conv[0][0]                 \n","__________________________________________________________________________________________________\n","conv1_relu (Activation)         (None, 64, 64, 64)   0           conv1_bn[0][0]                   \n","__________________________________________________________________________________________________\n","pool1_pad (ZeroPadding2D)       (None, 66, 66, 64)   0           conv1_relu[0][0]                 \n","__________________________________________________________________________________________________\n","pool1_pool (MaxPooling2D)       (None, 32, 32, 64)   0           pool1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv2_block1_1_conv (Conv2D)    (None, 32, 32, 64)   4160        pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_1_relu (Activation (None, 32, 32, 64)   0           conv2_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_relu (Activation (None, 32, 32, 64)   0           conv2_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_0_conv (Conv2D)    (None, 32, 32, 256)  16640       pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_0_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_add (Add)          (None, 32, 32, 256)  0           conv2_block1_0_bn[0][0]          \n","                                                                 conv2_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_out (Activation)   (None, 32, 32, 256)  0           conv2_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_1_conv (Conv2D)    (None, 32, 32, 64)   16448       conv2_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_1_relu (Activation (None, 32, 32, 64)   0           conv2_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_relu (Activation (None, 32, 32, 64)   0           conv2_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_add (Add)          (None, 32, 32, 256)  0           conv2_block1_out[0][0]           \n","                                                                 conv2_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_out (Activation)   (None, 32, 32, 256)  0           conv2_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_1_conv (Conv2D)    (None, 32, 32, 64)   16448       conv2_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_1_relu (Activation (None, 32, 32, 64)   0           conv2_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_relu (Activation (None, 32, 32, 64)   0           conv2_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_add (Add)          (None, 32, 32, 256)  0           conv2_block2_out[0][0]           \n","                                                                 conv2_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_out (Activation)   (None, 32, 32, 256)  0           conv2_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_1_conv (Conv2D)    (None, 16, 16, 128)  32896       conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_1_relu (Activation (None, 16, 16, 128)  0           conv3_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_relu (Activation (None, 16, 16, 128)  0           conv3_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_0_conv (Conv2D)    (None, 16, 16, 512)  131584      conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_0_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_add (Add)          (None, 16, 16, 512)  0           conv3_block1_0_bn[0][0]          \n","                                                                 conv3_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_out (Activation)   (None, 16, 16, 512)  0           conv3_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_1_relu (Activation (None, 16, 16, 128)  0           conv3_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_relu (Activation (None, 16, 16, 128)  0           conv3_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_add (Add)          (None, 16, 16, 512)  0           conv3_block1_out[0][0]           \n","                                                                 conv3_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_out (Activation)   (None, 16, 16, 512)  0           conv3_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_1_relu (Activation (None, 16, 16, 128)  0           conv3_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_relu (Activation (None, 16, 16, 128)  0           conv3_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_add (Add)          (None, 16, 16, 512)  0           conv3_block2_out[0][0]           \n","                                                                 conv3_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_out (Activation)   (None, 16, 16, 512)  0           conv3_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_1_relu (Activation (None, 16, 16, 128)  0           conv3_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_relu (Activation (None, 16, 16, 128)  0           conv3_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_add (Add)          (None, 16, 16, 512)  0           conv3_block3_out[0][0]           \n","                                                                 conv3_block4_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_out (Activation)   (None, 16, 16, 512)  0           conv3_block4_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_1_conv (Conv2D)    (None, 8, 8, 256)    131328      conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_1_relu (Activation (None, 8, 8, 256)    0           conv4_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_relu (Activation (None, 8, 8, 256)    0           conv4_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_0_conv (Conv2D)    (None, 8, 8, 1024)   525312      conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_0_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_add (Add)          (None, 8, 8, 1024)   0           conv4_block1_0_bn[0][0]          \n","                                                                 conv4_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_out (Activation)   (None, 8, 8, 1024)   0           conv4_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_1_relu (Activation (None, 8, 8, 256)    0           conv4_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_relu (Activation (None, 8, 8, 256)    0           conv4_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_add (Add)          (None, 8, 8, 1024)   0           conv4_block1_out[0][0]           \n","                                                                 conv4_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_out (Activation)   (None, 8, 8, 1024)   0           conv4_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_1_relu (Activation (None, 8, 8, 256)    0           conv4_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_relu (Activation (None, 8, 8, 256)    0           conv4_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_add (Add)          (None, 8, 8, 1024)   0           conv4_block2_out[0][0]           \n","                                                                 conv4_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_out (Activation)   (None, 8, 8, 1024)   0           conv4_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_1_relu (Activation (None, 8, 8, 256)    0           conv4_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_relu (Activation (None, 8, 8, 256)    0           conv4_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_add (Add)          (None, 8, 8, 1024)   0           conv4_block3_out[0][0]           \n","                                                                 conv4_block4_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_out (Activation)   (None, 8, 8, 1024)   0           conv4_block4_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block5_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_1_relu (Activation (None, 8, 8, 256)    0           conv4_block5_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block5_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block5_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_relu (Activation (None, 8, 8, 256)    0           conv4_block5_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block5_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block5_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_add (Add)          (None, 8, 8, 1024)   0           conv4_block4_out[0][0]           \n","                                                                 conv4_block5_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_out (Activation)   (None, 8, 8, 1024)   0           conv4_block5_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block5_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block6_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_1_relu (Activation (None, 8, 8, 256)    0           conv4_block6_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block6_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block6_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_relu (Activation (None, 8, 8, 256)    0           conv4_block6_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block6_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block6_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_add (Add)          (None, 8, 8, 1024)   0           conv4_block5_out[0][0]           \n","                                                                 conv4_block6_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_out (Activation)   (None, 8, 8, 1024)   0           conv4_block6_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_1_conv (Conv2D)    (None, 4, 4, 512)    524800      conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_1_relu (Activation (None, 4, 4, 512)    0           conv5_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_relu (Activation (None, 4, 4, 512)    0           conv5_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_0_conv (Conv2D)    (None, 4, 4, 2048)   2099200     conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_0_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_add (Add)          (None, 4, 4, 2048)   0           conv5_block1_0_bn[0][0]          \n","                                                                 conv5_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_out (Activation)   (None, 4, 4, 2048)   0           conv5_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_1_conv (Conv2D)    (None, 4, 4, 512)    1049088     conv5_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_1_relu (Activation (None, 4, 4, 512)    0           conv5_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_relu (Activation (None, 4, 4, 512)    0           conv5_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_add (Add)          (None, 4, 4, 2048)   0           conv5_block1_out[0][0]           \n","                                                                 conv5_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_out (Activation)   (None, 4, 4, 2048)   0           conv5_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_1_conv (Conv2D)    (None, 4, 4, 512)    1049088     conv5_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_1_relu (Activation (None, 4, 4, 512)    0           conv5_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_relu (Activation (None, 4, 4, 512)    0           conv5_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_add (Add)          (None, 4, 4, 2048)   0           conv5_block2_out[0][0]           \n","                                                                 conv5_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_out (Activation)   (None, 4, 4, 2048)   0           conv5_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","global_average_pooling2d (Globa (None, 2048)         0           conv5_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","global_max_pooling2d (GlobalMax (None, 2048)         0           conv5_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","batch_normalization (BatchNorma (None, 2048)         8192        global_average_pooling2d[0][0]   \n","__________________________________________________________________________________________________\n","batch_normalization_1 (BatchNor (None, 2048)         8192        global_max_pooling2d[0][0]       \n","__________________________________________________________________________________________________\n","concatenate (Concatenate)       (None, 4096)         0           batch_normalization[0][0]        \n","                                                                 batch_normalization_1[0][0]      \n","__________________________________________________________________________________________________\n","dense (Dense)                   (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dense_1 (Dense)                 (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dense_2 (Dense)                 (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dropout (Dropout)               (None, 2048)         0           dense[0][0]                      \n","__________________________________________________________________________________________________\n","dropout_1 (Dropout)             (None, 2048)         0           dense_1[0][0]                    \n","__________________________________________________________________________________________________\n","dropout_2 (Dropout)             (None, 2048)         0           dense_2[0][0]                    \n","__________________________________________________________________________________________________\n","regression_output (Dense)       (None, 1)            2049        dropout[0][0]                    \n","__________________________________________________________________________________________________\n","classification_output (Dense)   (None, 5)            10245       dropout_1[0][0]                  \n","__________________________________________________________________________________________________\n","ordinal_regression_output (Dens (None, 5)            10245       dropout_2[0][0]                  \n","==================================================================================================\n","Total params: 48,798,603\n","Trainable params: 48,737,291\n","Non-trainable params: 61,312\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"digmE6RPHVz8","executionInfo":{"status":"ok","timestamp":1601396282150,"user_tz":300,"elapsed":395,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"522e38e0-5ed8-4745-9693-c3df22f82502","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["STEP_SIZE_TRAIN = len(x_train1)//BATCH_SIZE\n","STEP_SIZE_VALID = len(x_val1)//BATCH_SIZE\n","print(STEP_SIZE_TRAIN,STEP_SIZE_VALID)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1975 219\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TOFSCrwTXfER"},"source":["from keras.callbacks import EarlyStopping,ReduceLROnPlateau,Callback"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4zXyK2aXIAJ1"},"source":[" \n"," \n"," def cosine_decay_with_warmup(global_step,\n","                             learning_rate_base,\n","                             total_steps,\n","                             warmup_learning_rate=0.0,\n","                             warmup_steps=0,\n","                             hold_base_rate_steps=0):\n","    \"\"\"\n","    Cosine decay schedule with warm up period.\n","    In this schedule, the learning rate grows linearly from warmup_learning_rate\n","    to learning_rate_base for warmup_steps, then transitions to a cosine decay\n","    schedule.\n","    :param global_step {int}: global step.\n","    :param learning_rate_base {float}: base learning rate.\n","    :param total_steps {int}: total number of training steps.\n","    :param warmup_learning_rate {float}: initial learning rate for warm up. (default: {0.0}).\n","    :param warmup_steps {int}: number of warmup steps. (default: {0}).\n","    :param hold_base_rate_steps {int}: Optional number of steps to hold base learning rate before decaying. (default: {0}).\n","    :param global_step {int}: global step.\n","    :Returns : a float representing learning rate.\n","    :Raises ValueError: if warmup_learning_rate is larger than learning_rate_base, or if warmup_steps is larger than total_steps.\n","    \"\"\"\n","\n","    if total_steps < warmup_steps:\n","        raise ValueError('total_steps must be larger or equal to warmup_steps.')\n","    learning_rate = 0.5 * learning_rate_base * (1 + np.cos(\n","        np.pi *\n","        (global_step - warmup_steps - hold_base_rate_steps\n","         ) / float(total_steps - warmup_steps - hold_base_rate_steps)))\n","    if hold_base_rate_steps > 0:\n","        learning_rate = np.where(global_step > warmup_steps + hold_base_rate_steps,\n","                                 learning_rate, learning_rate_base)\n","    if warmup_steps > 0:\n","        if learning_rate_base < warmup_learning_rate:\n","            raise ValueError('learning_rate_base must be larger or equal to warmup_learning_rate.')\n","        slope = (learning_rate_base - warmup_learning_rate) / warmup_steps\n","        warmup_rate = slope * global_step + warmup_learning_rate\n","        learning_rate = np.where(global_step < warmup_steps, warmup_rate,\n","                                 learning_rate)\n","    return np.where(global_step > total_steps, 0.0, learning_rate)\n"," \n"," class WarmUpCosineDecayScheduler(Callback):\n","    \"\"\"Cosine decay with warmup learning rate scheduler\"\"\"\n","\n","    def __init__(self,\n","                 learning_rate_base,\n","                 total_steps,\n","                 global_step_init=0,\n","                 warmup_learning_rate=0.0,\n","                 warmup_steps=0,\n","                 hold_base_rate_steps=0,\n","                 verbose=0):\n","        \"\"\"\n","        Constructor for cosine decay with warmup learning rate scheduler.\n","        :param learning_rate_base {float}: base learning rate.\n","        :param total_steps {int}: total number of training steps.\n","        :param global_step_init {int}: initial global step, e.g. from previous checkpoint.\n","        :param warmup_learning_rate {float}: initial learning rate for warm up. (default: {0.0}).\n","        :param warmup_steps {int}: number of warmup steps. (default: {0}).\n","        :param hold_base_rate_steps {int}: Optional number of steps to hold base learning rate before decaying. (default: {0}).\n","        :param verbose {int}: quiet, 1: update messages. (default: {0}).\n","        \"\"\"\n","       \n","        \n","        super(WarmUpCosineDecayScheduler, self).__init__()\n","        self.learning_rate_base = learning_rate_base\n","        self.total_steps = total_steps\n","        self.global_step = global_step_init\n","        self.warmup_learning_rate = warmup_learning_rate\n","        self.warmup_steps = warmup_steps\n","        self.hold_base_rate_steps = hold_base_rate_steps\n","        self.verbose = verbose\n","        self.learning_rates = []\n","\n","    def on_batch_end(self, batch, logs=None):\n","        self.global_step = self.global_step + 1\n","        lr = K.get_value(self.model.optimizer.lr)\n","        self.learning_rates.append(lr)\n","\n","    def on_batch_begin(self, batch, logs=None):\n","        lr = cosine_decay_with_warmup(global_step=self.global_step,\n","                                      learning_rate_base=self.learning_rate_base,\n","                                      total_steps=self.total_steps,\n","                                      warmup_learning_rate=self.warmup_learning_rate,\n","                                      warmup_steps=self.warmup_steps,\n","                                      hold_base_rate_steps=self.hold_base_rate_steps)\n","        K.set_value(self.model.optimizer.lr, lr)\n","        if self.verbose > 0:\n","            print('\\nBatch %02d: setting learning rate to %s.' % (self.global_step + 1, lr))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"o5j4dvw8JGD5"},"source":["FACTOR = 4\n","LEARNING_RATE = 1e-4 * FACTOR\n","WARMUP_EPOCHS = 5\n","#STEP_SIZE = len(x_train1) // BATCH_SIZE\n","#TOTAL_STEPS_1st = WARMUP_EPOCHS * STEP_SIZE"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"l9gJyuk9Id7o"},"source":["cosine_lr = WarmUpCosineDecayScheduler(learning_rate_base = LEARNING_RATE,\n","                                       total_steps=TOTAL_STEPS_1st,\n","                                       warmup_learning_rate=0.0,\n","                                       warmup_steps=TOTAL_STEPS_1st,\n","                                       hold_base_rate_steps=(2 * STEP_SIZE))\n","\n","callback_list = [cosine_lr]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cwGs2npdKGc9"},"source":["model.compile(optimizer = optimizers.SGD(lr=LEARNING_RATE),\n","              loss={'regression_output': 'mean_absolute_error', \n","                    'classification_output': 'categorical_crossentropy',\n","                    'ordinal_regression_output' : 'binary_crossentropy'\n","                    },\n","              metrics = ['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PY-yvu7cKLDC","executionInfo":{"status":"ok","timestamp":1601399430746,"user_tz":300,"elapsed":3123107,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"0cf0e957-b676-4d3e-d600-2532d459bcf2","colab":{"base_uri":"https://localhost:8080/","height":785}},"source":["history = model.fit(train_generator,\n","                              steps_per_epoch=STEP_SIZE_TRAIN,\n","                              validation_data=valid_generator,\n","                              validation_steps=STEP_SIZE_VALID,\n","                              epochs=20,\n","                              callbacks = callback_list,\n","                              verbose=1).history\n","\n","model.save(\"model_pre_training.h5\")\n","f = open(\"history_pre_training\",\"wb\")\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:720: UserWarning: This ImageDataGenerator specifies `featurewise_center`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n","/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:739: UserWarning: This ImageDataGenerator specifies `zca_whitening`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"},{"output_type":"stream","text":["Epoch 1/20\n","1975/1975 [==============================] - 156s 79ms/step - loss: 3.5370 - regression_output_loss: 1.3383 - classification_output_loss: 1.4878 - ordinal_regression_output_loss: 0.7109 - regression_output_accuracy: 0.4031 - classification_output_accuracy: 0.5291 - ordinal_regression_output_accuracy: 0.5662 - val_loss: 2.4145 - val_regression_output_loss: 0.9252 - val_classification_output_loss: 1.0405 - val_ordinal_regression_output_loss: 0.4488 - val_regression_output_accuracy: 0.4432 - val_classification_output_accuracy: 0.7269 - val_ordinal_regression_output_accuracy: 0.9926\n","Epoch 2/20\n","1975/1975 [==============================] - 155s 79ms/step - loss: 2.8540 - regression_output_loss: 1.2019 - classification_output_loss: 1.1583 - ordinal_regression_output_loss: 0.4938 - regression_output_accuracy: 0.4291 - classification_output_accuracy: 0.6609 - ordinal_regression_output_accuracy: 0.8769 - val_loss: 2.2137 - val_regression_output_loss: 0.8260 - val_classification_output_loss: 0.9724 - val_ordinal_regression_output_loss: 0.4154 - val_regression_output_accuracy: 0.4963 - val_classification_output_accuracy: 0.7246 - val_ordinal_regression_output_accuracy: 0.9946\n","Epoch 3/20\n","1975/1975 [==============================] - 156s 79ms/step - loss: 2.6135 - regression_output_loss: 1.0531 - classification_output_loss: 1.0941 - ordinal_regression_output_loss: 0.4662 - regression_output_accuracy: 0.4390 - classification_output_accuracy: 0.6705 - ordinal_regression_output_accuracy: 0.8833 - val_loss: 2.3608 - val_regression_output_loss: 0.8088 - val_classification_output_loss: 1.0976 - val_ordinal_regression_output_loss: 0.4544 - val_regression_output_accuracy: 0.5100 - val_classification_output_accuracy: 0.7343 - val_ordinal_regression_output_accuracy: 0.9943\n","Epoch 4/20\n","1975/1975 [==============================] - 157s 79ms/step - loss: 2.4010 - regression_output_loss: 0.9104 - classification_output_loss: 1.0440 - ordinal_regression_output_loss: 0.4466 - regression_output_accuracy: 0.4718 - classification_output_accuracy: 0.6817 - ordinal_regression_output_accuracy: 0.8921 - val_loss: 1.9639 - val_regression_output_loss: 0.6946 - val_classification_output_loss: 0.8854 - val_ordinal_regression_output_loss: 0.3838 - val_regression_output_accuracy: 0.5345 - val_classification_output_accuracy: 0.7357 - val_ordinal_regression_output_accuracy: 0.9834\n","Epoch 5/20\n","1975/1975 [==============================] - 157s 79ms/step - loss: 2.1673 - regression_output_loss: 0.7618 - classification_output_loss: 0.9782 - ordinal_regression_output_loss: 0.4273 - regression_output_accuracy: 0.5350 - classification_output_accuracy: 0.6915 - ordinal_regression_output_accuracy: 0.9015 - val_loss: 1.9931 - val_regression_output_loss: 0.6280 - val_classification_output_loss: 0.9524 - val_ordinal_regression_output_loss: 0.4127 - val_regression_output_accuracy: 0.6301 - val_classification_output_accuracy: 0.7383 - val_ordinal_regression_output_accuracy: 0.9926\n","Epoch 6/20\n","1975/1975 [==============================] - 156s 79ms/step - loss: 2.0664 - regression_output_loss: 0.6996 - classification_output_loss: 0.9491 - ordinal_regression_output_loss: 0.4178 - regression_output_accuracy: 0.5386 - classification_output_accuracy: 0.6946 - ordinal_regression_output_accuracy: 0.9072 - val_loss: 1.9089 - val_regression_output_loss: 0.6500 - val_classification_output_loss: 0.8799 - val_ordinal_regression_output_loss: 0.3791 - val_regression_output_accuracy: 0.5725 - val_classification_output_accuracy: 0.7380 - val_ordinal_regression_output_accuracy: 0.9883\n","Epoch 7/20\n","1975/1975 [==============================] - 157s 79ms/step - loss: 2.0604 - regression_output_loss: 0.6963 - classification_output_loss: 0.9472 - ordinal_regression_output_loss: 0.4169 - regression_output_accuracy: 0.5417 - classification_output_accuracy: 0.6996 - ordinal_regression_output_accuracy: 0.9076 - val_loss: 1.9205 - val_regression_output_loss: 0.6507 - val_classification_output_loss: 0.8905 - val_ordinal_regression_output_loss: 0.3792 - val_regression_output_accuracy: 0.5759 - val_classification_output_accuracy: 0.7332 - val_ordinal_regression_output_accuracy: 0.9886\n","Epoch 8/20\n","1975/1975 [==============================] - 157s 80ms/step - loss: 2.0627 - regression_output_loss: 0.6980 - classification_output_loss: 0.9462 - ordinal_regression_output_loss: 0.4185 - regression_output_accuracy: 0.5427 - classification_output_accuracy: 0.6972 - ordinal_regression_output_accuracy: 0.9074 - val_loss: 1.9261 - val_regression_output_loss: 0.6548 - val_classification_output_loss: 0.8894 - val_ordinal_regression_output_loss: 0.3820 - val_regression_output_accuracy: 0.5642 - val_classification_output_accuracy: 0.7392 - val_ordinal_regression_output_accuracy: 0.9880\n","Epoch 9/20\n","1975/1975 [==============================] - 157s 79ms/step - loss: 2.0577 - regression_output_loss: 0.6963 - classification_output_loss: 0.9445 - ordinal_regression_output_loss: 0.4169 - regression_output_accuracy: 0.5428 - classification_output_accuracy: 0.7008 - ordinal_regression_output_accuracy: 0.9120 - val_loss: 1.9136 - val_regression_output_loss: 0.6561 - val_classification_output_loss: 0.8787 - val_ordinal_regression_output_loss: 0.3788 - val_regression_output_accuracy: 0.5574 - val_classification_output_accuracy: 0.7394 - val_ordinal_regression_output_accuracy: 0.9877\n","Epoch 10/20\n","1975/1975 [==============================] - 157s 79ms/step - loss: 2.0590 - regression_output_loss: 0.6969 - classification_output_loss: 0.9460 - ordinal_regression_output_loss: 0.4161 - regression_output_accuracy: 0.5435 - classification_output_accuracy: 0.7004 - ordinal_regression_output_accuracy: 0.9091 - val_loss: 1.9222 - val_regression_output_loss: 0.6502 - val_classification_output_loss: 0.8871 - val_ordinal_regression_output_loss: 0.3848 - val_regression_output_accuracy: 0.5850 - val_classification_output_accuracy: 0.7377 - val_ordinal_regression_output_accuracy: 0.9900\n","Epoch 11/20\n","1975/1975 [==============================] - 157s 79ms/step - loss: 2.0574 - regression_output_loss: 0.6933 - classification_output_loss: 0.9479 - ordinal_regression_output_loss: 0.4162 - regression_output_accuracy: 0.5449 - classification_output_accuracy: 0.6994 - ordinal_regression_output_accuracy: 0.9099 - val_loss: 1.9185 - val_regression_output_loss: 0.6507 - val_classification_output_loss: 0.8881 - val_ordinal_regression_output_loss: 0.3797 - val_regression_output_accuracy: 0.5759 - val_classification_output_accuracy: 0.7354 - val_ordinal_regression_output_accuracy: 0.9874\n","Epoch 12/20\n","1975/1975 [==============================] - 156s 79ms/step - loss: 2.0622 - regression_output_loss: 0.6979 - classification_output_loss: 0.9435 - ordinal_regression_output_loss: 0.4208 - regression_output_accuracy: 0.5400 - classification_output_accuracy: 0.6971 - ordinal_regression_output_accuracy: 0.9073 - val_loss: 1.9038 - val_regression_output_loss: 0.6470 - val_classification_output_loss: 0.8776 - val_ordinal_regression_output_loss: 0.3792 - val_regression_output_accuracy: 0.5762 - val_classification_output_accuracy: 0.7366 - val_ordinal_regression_output_accuracy: 0.9909\n","Epoch 13/20\n","1975/1975 [==============================] - 156s 79ms/step - loss: 2.0623 - regression_output_loss: 0.6958 - classification_output_loss: 0.9513 - ordinal_regression_output_loss: 0.4152 - regression_output_accuracy: 0.5442 - classification_output_accuracy: 0.6967 - ordinal_regression_output_accuracy: 0.9078 - val_loss: 1.9112 - val_regression_output_loss: 0.6471 - val_classification_output_loss: 0.8829 - val_ordinal_regression_output_loss: 0.3813 - val_regression_output_accuracy: 0.5711 - val_classification_output_accuracy: 0.7360 - val_ordinal_regression_output_accuracy: 0.9886\n","Epoch 14/20\n","1975/1975 [==============================] - 157s 80ms/step - loss: 2.0665 - regression_output_loss: 0.6983 - classification_output_loss: 0.9501 - ordinal_regression_output_loss: 0.4181 - regression_output_accuracy: 0.5395 - classification_output_accuracy: 0.6977 - ordinal_regression_output_accuracy: 0.9095 - val_loss: 1.9153 - val_regression_output_loss: 0.6533 - val_classification_output_loss: 0.8807 - val_ordinal_regression_output_loss: 0.3813 - val_regression_output_accuracy: 0.5725 - val_classification_output_accuracy: 0.7414 - val_ordinal_regression_output_accuracy: 0.9900\n","Epoch 15/20\n","1975/1975 [==============================] - 156s 79ms/step - loss: 2.0732 - regression_output_loss: 0.7012 - classification_output_loss: 0.9529 - ordinal_regression_output_loss: 0.4190 - regression_output_accuracy: 0.5359 - classification_output_accuracy: 0.6971 - ordinal_regression_output_accuracy: 0.9080 - val_loss: 1.9292 - val_regression_output_loss: 0.6565 - val_classification_output_loss: 0.8904 - val_ordinal_regression_output_loss: 0.3823 - val_regression_output_accuracy: 0.5599 - val_classification_output_accuracy: 0.7397 - val_ordinal_regression_output_accuracy: 0.9889\n","Epoch 16/20\n","1975/1975 [==============================] - 155s 78ms/step - loss: 2.0691 - regression_output_loss: 0.6997 - classification_output_loss: 0.9490 - ordinal_regression_output_loss: 0.4204 - regression_output_accuracy: 0.5409 - classification_output_accuracy: 0.7001 - ordinal_regression_output_accuracy: 0.9082 - val_loss: 1.9320 - val_regression_output_loss: 0.6560 - val_classification_output_loss: 0.8951 - val_ordinal_regression_output_loss: 0.3809 - val_regression_output_accuracy: 0.5671 - val_classification_output_accuracy: 0.7340 - val_ordinal_regression_output_accuracy: 0.9872\n","Epoch 17/20\n","1975/1975 [==============================] - 152s 77ms/step - loss: 2.0620 - regression_output_loss: 0.6967 - classification_output_loss: 0.9492 - ordinal_regression_output_loss: 0.4160 - regression_output_accuracy: 0.5396 - classification_output_accuracy: 0.6986 - ordinal_regression_output_accuracy: 0.9093 - val_loss: 1.9082 - val_regression_output_loss: 0.6513 - val_classification_output_loss: 0.8792 - val_ordinal_regression_output_loss: 0.3777 - val_regression_output_accuracy: 0.5733 - val_classification_output_accuracy: 0.7389 - val_ordinal_regression_output_accuracy: 0.9903\n","Epoch 18/20\n","1975/1975 [==============================] - 152s 77ms/step - loss: 2.0690 - regression_output_loss: 0.6994 - classification_output_loss: 0.9497 - ordinal_regression_output_loss: 0.4200 - regression_output_accuracy: 0.5380 - classification_output_accuracy: 0.6987 - ordinal_regression_output_accuracy: 0.9062 - val_loss: 1.9213 - val_regression_output_loss: 0.6520 - val_classification_output_loss: 0.8888 - val_ordinal_regression_output_loss: 0.3805 - val_regression_output_accuracy: 0.5733 - val_classification_output_accuracy: 0.7372 - val_ordinal_regression_output_accuracy: 0.9877\n","Epoch 19/20\n","1975/1975 [==============================] - 150s 76ms/step - loss: 2.0641 - regression_output_loss: 0.6955 - classification_output_loss: 0.9493 - ordinal_regression_output_loss: 0.4193 - regression_output_accuracy: 0.5431 - classification_output_accuracy: 0.6972 - ordinal_regression_output_accuracy: 0.9098 - val_loss: 1.8989 - val_regression_output_loss: 0.6534 - val_classification_output_loss: 0.8686 - val_ordinal_regression_output_loss: 0.3769 - val_regression_output_accuracy: 0.5702 - val_classification_output_accuracy: 0.7406 - val_ordinal_regression_output_accuracy: 0.9894\n","Epoch 20/20\n","1975/1975 [==============================] - 150s 76ms/step - loss: 2.0642 - regression_output_loss: 0.6981 - classification_output_loss: 0.9486 - ordinal_regression_output_loss: 0.4175 - regression_output_accuracy: 0.5388 - classification_output_accuracy: 0.6966 - ordinal_regression_output_accuracy: 0.9080 - val_loss: 1.9285 - val_regression_output_loss: 0.6585 - val_classification_output_loss: 0.8901 - val_ordinal_regression_output_loss: 0.3799 - val_regression_output_accuracy: 0.5748 - val_classification_output_accuracy: 0.7366 - val_ordinal_regression_output_accuracy: 0.9886\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5vZC7ciAX3GT"},"source":["model.load_weights('/content/gdrive/My Drive/tesis2/exp2.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hng68L1yOtLB","executionInfo":{"status":"ok","timestamp":1601399990033,"user_tz":300,"elapsed":967,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"84ff869f-96d3-43b5-9012-4872b0494b4e","colab":{"base_uri":"https://localhost:8080/","height":350}},"source":["plt.figure(figsize=(8,5))\n","plt.plot(history['regression_output_loss'])\n","plt.plot(history['val_regression_output_loss'])\n","plt.title('Regression Model Loss - Pre Training')\n","plt.ylabel('Loss (MAE)')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Validation'], loc='best')\n","plt.xticks(range(1,21))\n","plt.gca().ticklabel_format(axis='both', style='plain', useOffset=False)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"2gtZUR8eO4ln","executionInfo":{"status":"ok","timestamp":1601399994574,"user_tz":300,"elapsed":1005,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"7ad7d806-0b21-4b6b-a434-53d90590e230","colab":{"base_uri":"https://localhost:8080/","height":350}},"source":["plt.figure(figsize=(8,5))\n","plt.plot(history['classification_output_loss'])\n","plt.plot(history['val_classification_output_loss'])\n","plt.title('Classification Model Loss - Pre Training')\n","plt.ylabel('Loss (Categorical Cross Entropy)')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Validation'], loc='best')\n","plt.xticks(range(1,21))\n","plt.gca().ticklabel_format(axis='both', style='plain', useOffset=False)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"WYm4kHUpO-rc","executionInfo":{"status":"ok","timestamp":1601399998113,"user_tz":300,"elapsed":963,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"e5a364fd-6a10-4c86-a868-b94dc1116d05","colab":{"base_uri":"https://localhost:8080/","height":350}},"source":["plt.figure(figsize=(8,5))\n","plt.plot(history['ordinal_regression_output_loss'])\n","plt.plot(history['val_ordinal_regression_output_loss'])\n","plt.title('Ordinal Regression Model Loss - Pre Training')\n","plt.ylabel('Loss (Binary Cross Entropy)')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Validation'], loc='best')\n","plt.xticks(range(1,21))\n","plt.gca().ticklabel_format(axis='both', style='plain', useOffset=False)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"MxQbvV9rqQ6K"},"source":["model.save('/content/gdrive/My Drive/tesis2/exp2.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7Bhh86R34PzS"},"source":["x_trainidrid = np.load('/content/gdrive/My Drive/tesis/idrid/idrid128.npy')\n","x_testidrid = np.load('/content/gdrive/My Drive/tesis/idrid/testidrid128.npy')\n","\n","x_trainmessi = np.load('/content/gdrive/My Drive/tesis/messidor/messi128.npy')\n","\n","idridtraindf = pd.read_csv('/content/gdrive/My Drive/tesis/idrid/a. IDRiD_Disease Grading_Training Labels.csv')\n","idridtestdf = pd.read_csv('/content/gdrive/My Drive/tesis/idrid/b. IDRiD_Disease Grading_Testing Labels.csv')\n","messidf = pd.read_csv('/content/gdrive/My Drive/tesis/messidor/messidor_data.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3Q05HNSZ8G78","executionInfo":{"status":"ok","timestamp":1601591453601,"user_tz":300,"elapsed":575,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"8d6332cd-0b2c-4b79-eae2-c4136112e6ab","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["idridtestdf.head(5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Image name</th>\n","      <th>Retinopathy grade</th>\n","      <th>Risk of macular edema</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>IDRiD_001</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>IDRiD_002</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>IDRiD_003</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>IDRiD_004</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>IDRiD_005</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Image name  Retinopathy grade  Risk of macular edema \n","0  IDRiD_001                  4                       0\n","1  IDRiD_002                  4                       1\n","2  IDRiD_003                  4                       0\n","3  IDRiD_004                  4                       0\n","4  IDRiD_005                  4                       1"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"NCyWsRcd8MIh","executionInfo":{"status":"ok","timestamp":1601591458123,"user_tz":300,"elapsed":790,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"f306bff5-bf2a-4614-f41c-6c66f9050141","colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["messidf.head(5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image_id</th>\n","      <th>adjudicated_dr_grade</th>\n","      <th>adjudicated_dme</th>\n","      <th>adjudicated_gradable</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20051020_43808_0100_PP.png</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20051020_43832_0100_PP.png</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20051020_43882_0100_PP.png</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20051020_43906_0100_PP.png</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20051020_44261_0100_PP.png</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                     image_id  ...  adjudicated_gradable\n","0  20051020_43808_0100_PP.png  ...                     1\n","1  20051020_43832_0100_PP.png  ...                     1\n","2  20051020_43882_0100_PP.png  ...                     1\n","3  20051020_43906_0100_PP.png  ...                     1\n","4  20051020_44261_0100_PP.png  ...                     1\n","\n","[5 rows x 4 columns]"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"KTcWftq78fWf"},"source":["y_trainidrdid = pd.get_dummies(idridtraindf['Retinopathy grade'])\n","y_testdrdid = pd.get_dummies(idridtestdf['Retinopathy grade'])\n","y_trainmessi = pd.get_dummies(messidf['adjudicated_dr_grade'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QJg514TE_Ftc"},"source":["x_train1messi, x_val1messi, y_train1messi, y_val2messi = train_test_split(\n","    x_trainmessi, y_trainmessi, \n","    test_size=0.10, \n","    random_state=2020\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xAq6qzhn_6ei"},"source":["x_train1 = np.concatenate((x_train1messi,x_trainidrid))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"j9rXfyhrAx2w"},"source":["y_train1= np.concatenate((y_train1messi,y_trainidrdid))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UxTIlwYEA9_Q"},"source":["x_val1= np.concatenate((x_val1messi,x_testidrid))\n","y_val1= np.concatenate((y_val2messi,y_testdrdid))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VLd9eur3QBx7"},"source":["def binary_focal_loss(gamma=2., alpha=.25):\n","    \"\"\"\n","    Binary form of focal loss.\n","      FL(p_t) = -alpha * (1 - p_t)**gamma * log(p_t)\n","      where p = sigmoid(x), p_t = p or 1 - p depending on if the label is 1 or 0, respectively.\n","    References:\n","        https://arxiv.org/pdf/1708.02002.pdf\n","    Usage:\n","     model.compile(loss=[binary_focal_loss(alpha=.25, gamma=2)], metrics=[\"accuracy\"], optimizer=adam)\n","    \"\"\"\n","    def binary_focal_loss_fixed(y_true, y_pred):\n","        \"\"\"\n","        :param y_true: A tensor of the same shape as `y_pred`\n","        :param y_pred:  A tensor resulting from a sigmoid\n","        :return: Output tensor.\n","        \"\"\"\n","        pt_1 = tf.where(tf.equal(y_true, 1), y_pred, tf.ones_like(y_pred))\n","        pt_0 = tf.where(tf.equal(y_true, 0), y_pred, tf.zeros_like(y_pred))\n","\n","        epsilon = K.epsilon()\n","        # clip to prevent NaN's and Inf's\n","        pt_1 = K.clip(pt_1, epsilon, 1. - epsilon)\n","        pt_0 = K.clip(pt_0, epsilon, 1. - epsilon)\n","\n","        return -K.mean(alpha * K.pow(1. - pt_1, gamma) * K.log(pt_1)) \\\n","               -K.mean((1 - alpha) * K.pow(pt_0, gamma) * K.log(1. - pt_0))\n","\n","    return binary_focal_loss_fixed"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NxkSX7JjQIp0"},"source":["def categorical_focal_loss(gamma=2., alpha=.25):\n","    \"\"\"\n","    Softmax version of focal loss.\n","           m\n","      FL = âˆ‘  -alpha * (1 - p_o,c)^gamma * y_o,c * log(p_o,c)\n","          c=1\n","      where m = number of classes, c = class and o = observation\n","    Parameters:\n","      alpha -- the same as weighing factor in balanced cross entropy\n","      gamma -- focusing parameter for modulating factor (1-p)\n","    Default value:\n","      gamma -- 2.0 as mentioned in the paper\n","      alpha -- 0.25 as mentioned in the paper\n","    References:\n","        Official paper: https://arxiv.org/pdf/1708.02002.pdf\n","        https://www.tensorflow.org/api_docs/python/tf/keras/backend/categorical_crossentropy\n","    Usage:\n","     model.compile(loss=[categorical_focal_loss(alpha=.25, gamma=2)], metrics=[\"accuracy\"], optimizer=adam)\n","    \"\"\"\n","    def categorical_focal_loss_fixed(y_true, y_pred):\n","        \"\"\"\n","        :param y_true: A tensor of the same shape as `y_pred`\n","        :param y_pred: A tensor resulting from a softmax\n","        :return: Output tensor.\n","        \"\"\"\n","\n","        # Scale predictions so that the class probas of each sample sum to 1\n","        y_pred /= K.sum(y_pred, axis=-1, keepdims=True)\n","\n","        # Clip the prediction value to prevent NaN's and Inf's\n","        epsilon = K.epsilon()\n","        y_pred = K.clip(y_pred, epsilon, 1. - epsilon)\n","\n","        # Calculate Cross Entropy\n","        cross_entropy = -y_true * K.log(y_pred)\n","\n","        # Calculate Focal Loss\n","        loss = alpha * K.pow(1 - y_pred, gamma) * cross_entropy\n","\n","        # Compute mean loss in mini_batch\n","        return K.mean(loss, axis=1)\n","\n","    return categorical_focal_loss_fixed"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LrqEZ6jynVbb","executionInfo":{"status":"ok","timestamp":1601395633913,"user_tz":300,"elapsed":5685,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"363ba66a-7873-4934-8d23-27d7f6292e1a","colab":{"base_uri":"https://localhost:8080/","height":292}},"source":["pip install keras-rectified-adam"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting keras-rectified-adam\n","  Downloading https://files.pythonhosted.org/packages/21/79/9521f66b92186702cb58a214c1b923b416266381cd824e15a1733f6a5b06/keras-rectified-adam-0.17.0.tar.gz\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from keras-rectified-adam) (1.18.5)\n","Requirement already satisfied: Keras in /usr/local/lib/python3.6/dist-packages (from keras-rectified-adam) (2.4.3)\n","Requirement already satisfied: scipy>=0.14 in /usr/local/lib/python3.6/dist-packages (from Keras->keras-rectified-adam) (1.4.1)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (from Keras->keras-rectified-adam) (3.13)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from Keras->keras-rectified-adam) (2.10.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from h5py->Keras->keras-rectified-adam) (1.15.0)\n","Building wheels for collected packages: keras-rectified-adam\n","  Building wheel for keras-rectified-adam (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for keras-rectified-adam: filename=keras_rectified_adam-0.17.0-cp36-none-any.whl size=14783 sha256=9909654c493736813c4b02f9779e883b64692dd447da86993f43d810c546d13f\n","  Stored in directory: /root/.cache/pip/wheels/7b/01/27/3a934e1a5644f5b93c720422a6ef97034ea78a21ba71cfb549\n","Successfully built keras-rectified-adam\n","Installing collected packages: keras-rectified-adam\n","Successfully installed keras-rectified-adam-0.17.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KDywRx8fDVoV"},"source":["WARMUP_LEARNING_RATE = 1e-3 * FACTOR"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WpzcQrJwHQWD"},"source":["import keras"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oNyCcp-yndcG","executionInfo":{"status":"ok","timestamp":1601596967235,"user_tz":300,"elapsed":14562,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"19e6756b-84fd-4c22-908c-9221a72e631d","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["pip uninstall keras-rectified-adam"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Uninstalling keras-rectified-adam-0.17.0:\n","  Would remove:\n","    /usr/local/lib/python3.6/dist-packages/keras_radam/*\n","    /usr/local/lib/python3.6/dist-packages/keras_rectified_adam-0.17.0.dist-info/*\n","    /usr/local/lib/python3.6/dist-packages/tests/*\n","  Would not remove (might be manually added):\n","    /usr/local/lib/python3.6/dist-packages/tests/download_media.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_AudioClips.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_ImageSequenceClip.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_PR.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_TextClip.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_VideoClip.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_VideoFileClip.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_Videos.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_classifier/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_classifier/conftest.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_classifier/test_class_prediction_error.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_classifier/test_classification_report.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_classifier/test_confusion_matrix.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_classifier/test_prcurve.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_classifier/test_rocauc.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_classifier/test_threshold.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_cluster/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_cluster/test_base.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_cluster/test_elbow.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_cluster/test_icdm.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_cluster/test_silhouette.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_compositing.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_examples.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_base.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_importances.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_jointplot.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_manifold.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_pca.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_pcoords.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_radviz.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_rankd.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_features/test_rfecv.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_ffmpeg_reader.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_fx.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_helper.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_issues.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_misc.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_model_selection/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_model_selection/conftest.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_model_selection/test_cross_validation.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_model_selection/test_learning_curve.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_model_selection/test_validation_curve.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_regressor/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_regressor/test_alphas.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_regressor/test_residuals.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_resourcerelease.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_resourcereleasedemo.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_style/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_style/test_colors.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_style/test_palettes.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_style/test_rcmod.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_target/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_target/test_binning.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_target/test_class_balance.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_target/test_feature_correlation.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_text/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_text/test_base.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_text/test_dispersion.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_text/test_freqdist.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_text/test_postag.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_text/test_tsne.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_tools.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_utils/__init__.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_utils/test_decorators.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_utils/test_helpers.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_utils/test_nan_warnings.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_utils/test_timer.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_utils/test_types.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_utils/test_wrapper.py\n","    /usr/local/lib/python3.6/dist-packages/tests/test_videotools.py\n","Proceed (y/n)? y\n","  Successfully uninstalled keras-rectified-adam-0.17.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"M6hxnIZpmFbi","executionInfo":{"status":"ok","timestamp":1601597862429,"user_tz":300,"elapsed":4487,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"8e4a6346-6200-4037-e5e2-1d0fdf01c7f7","colab":{"base_uri":"https://localhost:8080/","height":276}},"source":["pip install keras-rectified-adam"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Processing /root/.cache/pip/wheels/7b/01/27/3a934e1a5644f5b93c720422a6ef97034ea78a21ba71cfb549/keras_rectified_adam-0.17.0-cp36-none-any.whl\n","Requirement already satisfied: Keras in /usr/local/lib/python3.6/dist-packages (from keras-rectified-adam) (2.4.3)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from keras-rectified-adam) (1.18.5)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (from Keras->keras-rectified-adam) (3.13)\n","Requirement already satisfied: scipy>=0.14 in /usr/local/lib/python3.6/dist-packages (from Keras->keras-rectified-adam) (1.4.1)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from Keras->keras-rectified-adam) (2.10.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from h5py->Keras->keras-rectified-adam) (1.15.0)\n","Installing collected packages: keras-rectified-adam\n","Successfully installed keras-rectified-adam-0.17.0\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["keras_radam"]}}},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"UXuFSu7pmgUs"},"source":["from keras_radam import RAdam"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RIgS65X0qSmJ"},"source":["from tensorflow.python.keras.optimizer_v2.optimizer_v2 import OptimizerV2\n","\n","class RAdam(OptimizerV2):\n","    \"\"\"RAdam optimizer.\n","    According to the paper\n","    [On The Variance Of The Adaptive Learning Rate And Beyond](https://arxiv.org/pdf/1908.03265v1.pdf).\n","    \"\"\"\n","\n","    def __init__(self,\n","                 learning_rate=0.001,\n","                 beta_1=0.9,\n","                 beta_2=0.999,\n","                 epsilon=1e-7,\n","                 weight_decay=0.,\n","                 amsgrad=False,\n","                 total_steps=0,\n","                 warmup_proportion=0.1,\n","                 min_lr=0.,\n","                 name='RAdam',\n","                 **kwargs):\n","        r\"\"\"Construct a new Adam optimizer.\n","        Args:\n","            learning_rate: A Tensor or a floating point value.    The learning rate.\n","            beta_1: A float value or a constant float tensor. The exponential decay\n","                rate for the 1st moment estimates.\n","            beta_2: A float value or a constant float tensor. The exponential decay\n","                rate for the 2nd moment estimates.\n","            epsilon: A small constant for numerical stability. This epsilon is\n","                \"epsilon hat\" in the Kingma and Ba paper (in the formula just before\n","                Section 2.1), not the epsilon in Algorithm 1 of the paper.\n","            weight_decay: A floating point value. Weight decay for each param.\n","            amsgrad: boolean. Whether to apply AMSGrad variant of this algorithm from\n","                the paper \"On the Convergence of Adam and beyond\".\n","            total_steps: An integer. Total number of training steps.\n","                Enable warmup by setting a positive value.\n","            warmup_proportion: A floating point value. The proportion of increasing steps.\n","            min_lr: A floating point value. Minimum learning rate after warmup.\n","            name: Optional name for the operations created when applying gradients.\n","                Defaults to \"Adam\".    @compatibility(eager) When eager execution is\n","                enabled, `learning_rate`, `beta_1`, `beta_2`, and `epsilon` can each be\n","                a callable that takes no arguments and returns the actual value to use.\n","                This can be useful for changing these values across different\n","                invocations of optimizer functions. @end_compatibility\n","            **kwargs: keyword arguments. Allowed to be {`clipnorm`, `clipvalue`, `lr`,\n","                `decay`}. `clipnorm` is clip gradients by norm; `clipvalue` is clip\n","                gradients by value, `decay` is included for backward compatibility to\n","                allow time inverse decay of learning rate. `lr` is included for backward\n","                compatibility, recommended to use `learning_rate` instead.\n","        \"\"\"\n","\n","        super(RAdam, self).__init__(name, **kwargs)\n","        self._set_hyper('learning_rate', kwargs.get('lr', learning_rate))\n","        self._set_hyper('beta_1', beta_1)\n","        self._set_hyper('beta_2', beta_2)\n","        self._set_hyper('decay', self._initial_decay)\n","        self._set_hyper('weight_decay', weight_decay)\n","        self._set_hyper('total_steps', float(total_steps))\n","        self._set_hyper('warmup_proportion', warmup_proportion)\n","        self._set_hyper('min_lr', min_lr)\n","        self.epsilon = epsilon or K.epsilon()\n","        self.amsgrad = amsgrad\n","        self._initial_weight_decay = weight_decay\n","        self._initial_total_steps = total_steps\n","\n","    def _create_slots(self, var_list):\n","        for var in var_list:\n","            self.add_slot(var, 'm')\n","        for var in var_list:\n","            self.add_slot(var, 'v')\n","        if self.amsgrad:\n","            for var in var_list:\n","                self.add_slot(var, 'vhat')\n","\n","    def set_weights(self, weights):\n","        params = self.weights\n","        num_vars = int((len(params) - 1) / 2)\n","        if len(weights) == 3 * num_vars + 1:\n","            weights = weights[:len(params)]\n","        super(RAdam, self).set_weights(weights)\n","\n","    def _resource_apply_dense(self, grad, var):\n","        var_dtype = var.dtype.base_dtype\n","        lr_t = self._decayed_lr(var_dtype)\n","        m = self.get_slot(var, 'm')\n","        v = self.get_slot(var, 'v')\n","        beta_1_t = self._get_hyper('beta_1', var_dtype)\n","        beta_2_t = self._get_hyper('beta_2', var_dtype)\n","        epsilon_t = ops.convert_to_tensor(self.epsilon, var_dtype)\n","        local_step = math_ops.cast(self.iterations + 1, var_dtype)\n","        beta_1_power = math_ops.pow(beta_1_t, local_step)\n","        beta_2_power = math_ops.pow(beta_2_t, local_step)\n","\n","        if self._initial_total_steps > 0:\n","            total_steps = self._get_hyper('total_steps', var_dtype)\n","            warmup_steps = total_steps * self._get_hyper('warmup_proportion', var_dtype)\n","            min_lr = self._get_hyper('min_lr', var_dtype)\n","            decay_steps = K.maximum(total_steps - warmup_steps, 1)\n","            decay_rate = (min_lr - lr_t) / decay_steps\n","            lr_t = tf.where(\n","                local_step <= warmup_steps,\n","                lr_t * (local_step / warmup_steps),\n","                lr_t + decay_rate * K.minimum(local_step - warmup_steps, decay_steps),\n","            )\n","\n","        sma_inf = 2.0 / (1.0 - beta_2_t) - 1.0\n","        sma_t = sma_inf - 2.0 * local_step * beta_2_power / (1.0 - beta_2_power)\n","\n","        m_t = state_ops.assign(m,\n","                               beta_1_t * m + (1.0 - beta_1_t) * grad,\n","                               use_locking=self._use_locking)\n","        m_corr_t = m_t / (1.0 - beta_1_power)\n","\n","        v_t = state_ops.assign(v,\n","                               beta_2_t * v + (1.0 - beta_2_t) * math_ops.square(grad),\n","                               use_locking=self._use_locking)\n","        if self.amsgrad:\n","            vhat = self.get_slot(var, 'vhat')\n","            vhat_t = state_ops.assign(vhat,\n","                                      math_ops.maximum(vhat, v_t),\n","                                      use_locking=self._use_locking)\n","            v_corr_t = math_ops.sqrt(vhat_t / (1.0 - beta_2_power))\n","        else:\n","            vhat_t = None\n","            v_corr_t = math_ops.sqrt(v_t / (1.0 - beta_2_power))\n","\n","        r_t = math_ops.sqrt((sma_t - 4.0) / (sma_inf - 4.0) *\n","                            (sma_t - 2.0) / (sma_inf - 2.0) *\n","                            sma_inf / sma_t)\n","\n","        var_t = tf.where(sma_t >= 5.0, r_t * m_corr_t / (v_corr_t + epsilon_t), m_corr_t)\n","\n","        if self._initial_weight_decay > 0.0:\n","            var_t += self._get_hyper('weight_decay', var_dtype) * var\n","\n","        var_update = state_ops.assign_sub(var,\n","                                          lr_t * var_t,\n","                                          use_locking=self._use_locking)\n","\n","        updates = [var_update, m_t, v_t]\n","        if self.amsgrad:\n","            updates.append(vhat_t)\n","        return control_flow_ops.group(*updates)\n","\n","    def _resource_apply_sparse(self, grad, var, indices):\n","        var_dtype = var.dtype.base_dtype\n","        lr_t = self._decayed_lr(var_dtype)\n","        beta_1_t = self._get_hyper('beta_1', var_dtype)\n","        beta_2_t = self._get_hyper('beta_2', var_dtype)\n","        epsilon_t = ops.convert_to_tensor(self.epsilon, var_dtype)\n","        local_step = math_ops.cast(self.iterations + 1, var_dtype)\n","        beta_1_power = math_ops.pow(beta_1_t, local_step)\n","        beta_2_power = math_ops.pow(beta_2_t, local_step)\n","\n","        if self._initial_total_steps > 0:\n","            total_steps = self._get_hyper('total_steps', var_dtype)\n","            warmup_steps = total_steps * self._get_hyper('warmup_proportion', var_dtype)\n","            min_lr = self._get_hyper('min_lr', var_dtype)\n","            decay_steps = K.maximum(total_steps - warmup_steps, 1)\n","            decay_rate = (min_lr - lr_t) / decay_steps\n","            lr_t = tf.where(\n","                local_step <= warmup_steps,\n","                lr_t * (local_step / warmup_steps),\n","                lr_t + decay_rate * K.minimum(local_step - warmup_steps, decay_steps),\n","            )\n","\n","        sma_inf = 2.0 / (1.0 - beta_2_t) - 1.0\n","        sma_t = sma_inf - 2.0 * local_step * beta_2_power / (1.0 - beta_2_power)\n","\n","        m = self.get_slot(var, 'm')\n","        m_scaled_g_values = grad * (1 - beta_1_t)\n","        m_t = state_ops.assign(m, m * beta_1_t, use_locking=self._use_locking)\n","        with ops.control_dependencies([m_t]):\n","            m_t = self._resource_scatter_add(m, indices, m_scaled_g_values)\n","        m_corr_t = m_t / (1.0 - beta_1_power)\n","\n","        v = self.get_slot(var, 'v')\n","        v_scaled_g_values = (grad * grad) * (1 - beta_2_t)\n","        v_t = state_ops.assign(v, v * beta_2_t, use_locking=self._use_locking)\n","        with ops.control_dependencies([v_t]):\n","            v_t = self._resource_scatter_add(v, indices, v_scaled_g_values)\n","\n","        if self.amsgrad:\n","            vhat = self.get_slot(var, 'vhat')\n","            vhat_t = state_ops.assign(vhat,\n","                                      math_ops.maximum(vhat, v_t),\n","                                      use_locking=self._use_locking)\n","            v_corr_t = math_ops.sqrt(vhat_t / (1.0 - beta_2_power))\n","        else:\n","            vhat_t = None\n","            v_corr_t = math_ops.sqrt(v_t / (1.0 - beta_2_power))\n","\n","        r_t = math_ops.sqrt((sma_t - 4.0) / (sma_inf - 4.0) *\n","                            (sma_t - 2.0) / (sma_inf - 2.0) *\n","                            sma_inf / sma_t)\n","\n","        var_t = tf.where(sma_t >= 5.0, r_t * m_corr_t / (v_corr_t + epsilon_t), m_corr_t)\n","\n","        if self._initial_weight_decay > 0.0:\n","            var_t += self._get_hyper('weight_decay', var_dtype) * var\n","\n","        var_update = self._resource_scatter_add(var, indices, tf.gather(-lr_t * var_t, indices))\n","\n","        updates = [var_update, m_t, v_t]\n","        if self.amsgrad:\n","            updates.append(vhat_t)\n","        return control_flow_ops.group(*updates)\n","\n","    def get_config(self):\n","        config = super(RAdam, self).get_config()\n","        config.update({\n","            'learning_rate': self._serialize_hyperparameter('learning_rate'),\n","            'beta_1': self._serialize_hyperparameter('beta_1'),\n","            'beta_2': self._serialize_hyperparameter('beta_2'),\n","            'decay': self._serialize_hyperparameter('decay'),\n","            'weight_decay': self._serialize_hyperparameter('weight_decay'),\n","            'epsilon': self.epsilon,\n","            'amsgrad': self.amsgrad,\n","            'total_steps': self._serialize_hyperparameter('total_steps'),\n","            'warmup_proportion': self._serialize_hyperparameter('warmup_proportion'),\n","            'min_lr': self._serialize_hyperparameter('min_lr'),\n","        })\n","        return config"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FvDlQ61HKMeh"},"source":["from keras.losses import binary_crossentropy,categorical_crossentropy,mean_squared_error"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"imfx11UPU2zQ","executionInfo":{"status":"ok","timestamp":1601597775665,"user_tz":300,"elapsed":919,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"8ed7e764-1f34-4402-d215-2ec321014076","colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["train_datagen=ImageDataGenerator(rescale=1./255,rotation_range=360,brightness_range=[0.5, 1.5],\n","                                     zoom_range=[1, 1.2],zca_whitening=True,horizontal_flip=True,\n","                                     vertical_flip=True,fill_mode='constant',cval=0.)\n","\n","train_generator = multiple_outputs(generator = train_datagen, X=x_train1, Y=y_train1,\n","                                   batch_size=BATCH_SIZE)\n","     \n","valid_generator = multiple_outputs(generator = train_datagen, X=x_val1,Y=y_val1,\n","                                   batch_size=BATCH_SIZE)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:337: UserWarning: This ImageDataGenerator specifies `zca_whitening`, which overrides setting of `featurewise_center`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"dy3ofOq8T_A-","executionInfo":{"status":"ok","timestamp":1601591519362,"user_tz":300,"elapsed":913,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"eaeeec29-0b58-4845-ea90-fd29eb6e4fff","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["STEP_SIZE_TRAIN = len(x_train1)//BATCH_SIZE\n","STEP_SIZE_VALID = len(x_val1)//BATCH_SIZE\n","print(STEP_SIZE_TRAIN,STEP_SIZE_VALID)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["124 17\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fDC0MrJ3ahh8"},"source":["STEP_SIZE = len(x_train1) // BATCH_SIZE\n","TOTAL_STEPS_1st = WARMUP_EPOCHS * STEP_SIZE"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8AV8npp9abFT"},"source":["cosine_lr = WarmUpCosineDecayScheduler(learning_rate_base = LEARNING_RATE,\n","                                       total_steps=TOTAL_STEPS_1st,\n","                                       warmup_learning_rate=0.0,\n","                                       warmup_steps=TOTAL_STEPS_1st,\n","                                       hold_base_rate_steps=(2 * STEP_SIZE))\n","\n","callback_list = [cosine_lr]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-tWVZWUevxod"},"source":["y_train1 = y_train1.astype('float32')\n","y_val1 = y_val1.astype('float32')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EHG0THNfrfz8"},"source":["import tensorflow_addons as tfa"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XTWuUyVfrmQd"},"source":["opt = tfa.optimizers.RectifiedAdam(lr=1e-3)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qZKoRwUrQSMQ","executionInfo":{"status":"ok","timestamp":1601599114823,"user_tz":300,"elapsed":1078278,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"ebf96e60-db16-40ba-818f-5077470fa2ea","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["model.compile(optimizer  = opt,\n","              loss={'regression_output': mean_squared_error, \n","                    'classification_output': categorical_focal_loss(alpha=.25, gamma=2) ,\n","                    'ordinal_regression_output' : binary_focal_loss(alpha=.25, gamma=2)\n","                    },\n","              metrics = ['accuracy'])\n","\n","\n","history = model.fit(train_generator,\n","                              steps_per_epoch=STEP_SIZE_TRAIN,\n","                              validation_data=valid_generator,\n","                              validation_steps=STEP_SIZE_VALID,\n","                              epochs=75,\n","                              callbacks = callback_list,\n","                              verbose=1).history\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:720: UserWarning: This ImageDataGenerator specifies `featurewise_center`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n","/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:739: UserWarning: This ImageDataGenerator specifies `zca_whitening`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"},{"output_type":"stream","text":["Epoch 1/75\n","124/124 [==============================] - 15s 121ms/step - loss: 1.5562 - regression_output_loss: 1.3616 - classification_output_loss: 0.0577 - ordinal_regression_output_loss: 0.1369 - regression_output_accuracy: 0.3777 - classification_output_accuracy: 0.5102 - ordinal_regression_output_accuracy: 0.8284 - val_loss: 1.2110 - val_regression_output_loss: 1.0720 - val_classification_output_loss: 0.0391 - val_ordinal_regression_output_loss: 0.1000 - val_regression_output_accuracy: 0.1838 - val_classification_output_accuracy: 0.4963 - val_ordinal_regression_output_accuracy: 0.8529\n","Epoch 2/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.2009 - regression_output_loss: 1.0320 - classification_output_loss: 0.0479 - ordinal_regression_output_loss: 0.1209 - regression_output_accuracy: 0.3261 - classification_output_accuracy: 0.4854 - ordinal_regression_output_accuracy: 0.7167 - val_loss: 1.3761 - val_regression_output_loss: 1.2132 - val_classification_output_loss: 0.0494 - val_ordinal_regression_output_loss: 0.1136 - val_regression_output_accuracy: 0.2059 - val_classification_output_accuracy: 0.4743 - val_ordinal_regression_output_accuracy: 0.7206\n","Epoch 3/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.2938 - regression_output_loss: 1.1066 - classification_output_loss: 0.0496 - ordinal_regression_output_loss: 0.1376 - regression_output_accuracy: 0.3513 - classification_output_accuracy: 0.4944 - ordinal_regression_output_accuracy: 0.6878 - val_loss: 1.5143 - val_regression_output_loss: 1.2795 - val_classification_output_loss: 0.0525 - val_ordinal_regression_output_loss: 0.1823 - val_regression_output_accuracy: 0.2537 - val_classification_output_accuracy: 0.5221 - val_ordinal_regression_output_accuracy: 0.8676\n","Epoch 4/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.4237 - regression_output_loss: 1.2178 - classification_output_loss: 0.0560 - ordinal_regression_output_loss: 0.1500 - regression_output_accuracy: 0.3426 - classification_output_accuracy: 0.5041 - ordinal_regression_output_accuracy: 0.6954 - val_loss: 1.3400 - val_regression_output_loss: 1.1687 - val_classification_output_loss: 0.0525 - val_ordinal_regression_output_loss: 0.1187 - val_regression_output_accuracy: 0.2426 - val_classification_output_accuracy: 0.5441 - val_ordinal_regression_output_accuracy: 0.8640\n","Epoch 5/75\n","124/124 [==============================] - 13s 109ms/step - loss: 1.5353 - regression_output_loss: 1.2922 - classification_output_loss: 0.0720 - ordinal_regression_output_loss: 0.1710 - regression_output_accuracy: 0.3203 - classification_output_accuracy: 0.4838 - ordinal_regression_output_accuracy: 0.7005 - val_loss: 1.9480 - val_regression_output_loss: 1.5702 - val_classification_output_loss: 0.0909 - val_ordinal_regression_output_loss: 0.2869 - val_regression_output_accuracy: 0.4926 - val_classification_output_accuracy: 0.5441 - val_ordinal_regression_output_accuracy: 0.8713\n","Epoch 6/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6599 - regression_output_loss: 1.3913 - classification_output_loss: 0.0712 - ordinal_regression_output_loss: 0.1973 - regression_output_accuracy: 0.3797 - classification_output_accuracy: 0.4939 - ordinal_regression_output_accuracy: 0.6386 - val_loss: 1.6002 - val_regression_output_loss: 1.3039 - val_classification_output_loss: 0.0738 - val_ordinal_regression_output_loss: 0.2225 - val_regression_output_accuracy: 0.3382 - val_classification_output_accuracy: 0.4853 - val_ordinal_regression_output_accuracy: 0.7206\n","Epoch 7/75\n","124/124 [==============================] - 13s 109ms/step - loss: 1.6881 - regression_output_loss: 1.4137 - classification_output_loss: 0.0743 - ordinal_regression_output_loss: 0.2001 - regression_output_accuracy: 0.3736 - classification_output_accuracy: 0.4822 - ordinal_regression_output_accuracy: 0.6386 - val_loss: 1.8613 - val_regression_output_loss: 1.5756 - val_classification_output_loss: 0.0751 - val_ordinal_regression_output_loss: 0.2106 - val_regression_output_accuracy: 0.2647 - val_classification_output_accuracy: 0.4449 - val_ordinal_regression_output_accuracy: 0.6324\n","Epoch 8/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6440 - regression_output_loss: 1.3672 - classification_output_loss: 0.0706 - ordinal_regression_output_loss: 0.2062 - regression_output_accuracy: 0.3706 - classification_output_accuracy: 0.4924 - ordinal_regression_output_accuracy: 0.6330 - val_loss: 2.0049 - val_regression_output_loss: 1.7178 - val_classification_output_loss: 0.0782 - val_ordinal_regression_output_loss: 0.2089 - val_regression_output_accuracy: 0.2684 - val_classification_output_accuracy: 0.4449 - val_ordinal_regression_output_accuracy: 0.6618\n","Epoch 9/75\n","124/124 [==============================] - 13s 108ms/step - loss: 1.6042 - regression_output_loss: 1.3315 - classification_output_loss: 0.0735 - ordinal_regression_output_loss: 0.1992 - regression_output_accuracy: 0.3746 - classification_output_accuracy: 0.4766 - ordinal_regression_output_accuracy: 0.6376 - val_loss: 2.0125 - val_regression_output_loss: 1.7168 - val_classification_output_loss: 0.0776 - val_ordinal_regression_output_loss: 0.2181 - val_regression_output_accuracy: 0.3015 - val_classification_output_accuracy: 0.5110 - val_ordinal_regression_output_accuracy: 0.6691\n","Epoch 10/75\n","124/124 [==============================] - 13s 108ms/step - loss: 1.7441 - regression_output_loss: 1.4693 - classification_output_loss: 0.0717 - ordinal_regression_output_loss: 0.2032 - regression_output_accuracy: 0.3629 - classification_output_accuracy: 0.4751 - ordinal_regression_output_accuracy: 0.6371 - val_loss: 1.9985 - val_regression_output_loss: 1.6953 - val_classification_output_loss: 0.0798 - val_ordinal_regression_output_loss: 0.2234 - val_regression_output_accuracy: 0.2610 - val_classification_output_accuracy: 0.4375 - val_ordinal_regression_output_accuracy: 0.6287\n","Epoch 11/75\n","124/124 [==============================] - 13s 107ms/step - loss: 1.6681 - regression_output_loss: 1.3943 - classification_output_loss: 0.0739 - ordinal_regression_output_loss: 0.1999 - regression_output_accuracy: 0.3761 - classification_output_accuracy: 0.4685 - ordinal_regression_output_accuracy: 0.6386 - val_loss: 1.9506 - val_regression_output_loss: 1.6530 - val_classification_output_loss: 0.0769 - val_ordinal_regression_output_loss: 0.2207 - val_regression_output_accuracy: 0.3015 - val_classification_output_accuracy: 0.4596 - val_ordinal_regression_output_accuracy: 0.6544\n","Epoch 12/75\n","124/124 [==============================] - 13s 108ms/step - loss: 1.6855 - regression_output_loss: 1.4092 - classification_output_loss: 0.0750 - ordinal_regression_output_loss: 0.2012 - regression_output_accuracy: 0.3640 - classification_output_accuracy: 0.4731 - ordinal_regression_output_accuracy: 0.6381 - val_loss: 1.6527 - val_regression_output_loss: 1.3734 - val_classification_output_loss: 0.0770 - val_ordinal_regression_output_loss: 0.2023 - val_regression_output_accuracy: 0.2904 - val_classification_output_accuracy: 0.3971 - val_ordinal_regression_output_accuracy: 0.6176\n","Epoch 13/75\n","124/124 [==============================] - 13s 108ms/step - loss: 1.6533 - regression_output_loss: 1.3802 - classification_output_loss: 0.0733 - ordinal_regression_output_loss: 0.1998 - regression_output_accuracy: 0.3665 - classification_output_accuracy: 0.4807 - ordinal_regression_output_accuracy: 0.6401 - val_loss: 1.9968 - val_regression_output_loss: 1.7027 - val_classification_output_loss: 0.0738 - val_ordinal_regression_output_loss: 0.2204 - val_regression_output_accuracy: 0.3235 - val_classification_output_accuracy: 0.4743 - val_ordinal_regression_output_accuracy: 0.6471\n","Epoch 14/75\n","124/124 [==============================] - 13s 108ms/step - loss: 1.7319 - regression_output_loss: 1.4592 - classification_output_loss: 0.0724 - ordinal_regression_output_loss: 0.2002 - regression_output_accuracy: 0.3680 - classification_output_accuracy: 0.4904 - ordinal_regression_output_accuracy: 0.6477 - val_loss: 2.0024 - val_regression_output_loss: 1.7138 - val_classification_output_loss: 0.0764 - val_ordinal_regression_output_loss: 0.2122 - val_regression_output_accuracy: 0.2757 - val_classification_output_accuracy: 0.4669 - val_ordinal_regression_output_accuracy: 0.6287\n","Epoch 15/75\n","124/124 [==============================] - 13s 109ms/step - loss: 1.6685 - regression_output_loss: 1.3964 - classification_output_loss: 0.0752 - ordinal_regression_output_loss: 0.1970 - regression_output_accuracy: 0.3812 - classification_output_accuracy: 0.4761 - ordinal_regression_output_accuracy: 0.6345 - val_loss: 2.0473 - val_regression_output_loss: 1.7552 - val_classification_output_loss: 0.0734 - val_ordinal_regression_output_loss: 0.2188 - val_regression_output_accuracy: 0.3088 - val_classification_output_accuracy: 0.4559 - val_ordinal_regression_output_accuracy: 0.6507\n","Epoch 16/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.6943 - regression_output_loss: 1.4201 - classification_output_loss: 0.0709 - ordinal_regression_output_loss: 0.2033 - regression_output_accuracy: 0.3701 - classification_output_accuracy: 0.4868 - ordinal_regression_output_accuracy: 0.6391 - val_loss: 2.0237 - val_regression_output_loss: 1.7509 - val_classification_output_loss: 0.0740 - val_ordinal_regression_output_loss: 0.1988 - val_regression_output_accuracy: 0.2904 - val_classification_output_accuracy: 0.4596 - val_ordinal_regression_output_accuracy: 0.6581\n","Epoch 17/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.7087 - regression_output_loss: 1.4275 - classification_output_loss: 0.0772 - ordinal_regression_output_loss: 0.2040 - regression_output_accuracy: 0.3574 - classification_output_accuracy: 0.4660 - ordinal_regression_output_accuracy: 0.6431 - val_loss: 1.9490 - val_regression_output_loss: 1.6622 - val_classification_output_loss: 0.0745 - val_ordinal_regression_output_loss: 0.2123 - val_regression_output_accuracy: 0.3015 - val_classification_output_accuracy: 0.4596 - val_ordinal_regression_output_accuracy: 0.6360\n","Epoch 18/75\n","124/124 [==============================] - 13s 107ms/step - loss: 1.6877 - regression_output_loss: 1.4206 - classification_output_loss: 0.0723 - ordinal_regression_output_loss: 0.1948 - regression_output_accuracy: 0.3660 - classification_output_accuracy: 0.4898 - ordinal_regression_output_accuracy: 0.6279 - val_loss: 1.9775 - val_regression_output_loss: 1.6670 - val_classification_output_loss: 0.0866 - val_ordinal_regression_output_loss: 0.2239 - val_regression_output_accuracy: 0.3199 - val_classification_output_accuracy: 0.4449 - val_ordinal_regression_output_accuracy: 0.6324\n","Epoch 19/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6470 - regression_output_loss: 1.3683 - classification_output_loss: 0.0723 - ordinal_regression_output_loss: 0.2065 - regression_output_accuracy: 0.3761 - classification_output_accuracy: 0.4777 - ordinal_regression_output_accuracy: 0.6254 - val_loss: 1.8587 - val_regression_output_loss: 1.5727 - val_classification_output_loss: 0.0771 - val_ordinal_regression_output_loss: 0.2088 - val_regression_output_accuracy: 0.3015 - val_classification_output_accuracy: 0.4301 - val_ordinal_regression_output_accuracy: 0.6912\n","Epoch 20/75\n","124/124 [==============================] - 13s 109ms/step - loss: 1.6229 - regression_output_loss: 1.3540 - classification_output_loss: 0.0727 - ordinal_regression_output_loss: 0.1963 - regression_output_accuracy: 0.3660 - classification_output_accuracy: 0.4893 - ordinal_regression_output_accuracy: 0.6391 - val_loss: 1.8957 - val_regression_output_loss: 1.6072 - val_classification_output_loss: 0.0757 - val_ordinal_regression_output_loss: 0.2127 - val_regression_output_accuracy: 0.2684 - val_classification_output_accuracy: 0.4449 - val_ordinal_regression_output_accuracy: 0.5882\n","Epoch 21/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6637 - regression_output_loss: 1.3964 - classification_output_loss: 0.0724 - ordinal_regression_output_loss: 0.1949 - regression_output_accuracy: 0.3726 - classification_output_accuracy: 0.4970 - ordinal_regression_output_accuracy: 0.6239 - val_loss: 2.0784 - val_regression_output_loss: 1.7745 - val_classification_output_loss: 0.0781 - val_ordinal_regression_output_loss: 0.2258 - val_regression_output_accuracy: 0.2941 - val_classification_output_accuracy: 0.4265 - val_ordinal_regression_output_accuracy: 0.6618\n","Epoch 22/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6247 - regression_output_loss: 1.3512 - classification_output_loss: 0.0739 - ordinal_regression_output_loss: 0.1996 - regression_output_accuracy: 0.3787 - classification_output_accuracy: 0.4827 - ordinal_regression_output_accuracy: 0.6310 - val_loss: 1.9958 - val_regression_output_loss: 1.7012 - val_classification_output_loss: 0.0761 - val_ordinal_regression_output_loss: 0.2185 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4375 - val_ordinal_regression_output_accuracy: 0.6360\n","Epoch 23/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.7067 - regression_output_loss: 1.4278 - classification_output_loss: 0.0753 - ordinal_regression_output_loss: 0.2035 - regression_output_accuracy: 0.3675 - classification_output_accuracy: 0.4670 - ordinal_regression_output_accuracy: 0.6345 - val_loss: 1.6792 - val_regression_output_loss: 1.4097 - val_classification_output_loss: 0.0755 - val_ordinal_regression_output_loss: 0.1939 - val_regression_output_accuracy: 0.3088 - val_classification_output_accuracy: 0.4743 - val_ordinal_regression_output_accuracy: 0.6324\n","Epoch 24/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6365 - regression_output_loss: 1.3698 - classification_output_loss: 0.0687 - ordinal_regression_output_loss: 0.1981 - regression_output_accuracy: 0.3624 - classification_output_accuracy: 0.4883 - ordinal_regression_output_accuracy: 0.6223 - val_loss: 1.8774 - val_regression_output_loss: 1.5916 - val_classification_output_loss: 0.0755 - val_ordinal_regression_output_loss: 0.2102 - val_regression_output_accuracy: 0.3051 - val_classification_output_accuracy: 0.4816 - val_ordinal_regression_output_accuracy: 0.6434\n","Epoch 25/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.6788 - regression_output_loss: 1.4022 - classification_output_loss: 0.0731 - ordinal_regression_output_loss: 0.2035 - regression_output_accuracy: 0.3604 - classification_output_accuracy: 0.4706 - ordinal_regression_output_accuracy: 0.6228 - val_loss: 1.9815 - val_regression_output_loss: 1.6712 - val_classification_output_loss: 0.0840 - val_ordinal_regression_output_loss: 0.2263 - val_regression_output_accuracy: 0.3125 - val_classification_output_accuracy: 0.4485 - val_ordinal_regression_output_accuracy: 0.6507\n","Epoch 26/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.7378 - regression_output_loss: 1.4554 - classification_output_loss: 0.0721 - ordinal_regression_output_loss: 0.2103 - regression_output_accuracy: 0.3731 - classification_output_accuracy: 0.4782 - ordinal_regression_output_accuracy: 0.6239 - val_loss: 1.8123 - val_regression_output_loss: 1.5307 - val_classification_output_loss: 0.0689 - val_ordinal_regression_output_loss: 0.2127 - val_regression_output_accuracy: 0.3088 - val_classification_output_accuracy: 0.4596 - val_ordinal_regression_output_accuracy: 0.6360\n","Epoch 27/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6722 - regression_output_loss: 1.4085 - classification_output_loss: 0.0709 - ordinal_regression_output_loss: 0.1928 - regression_output_accuracy: 0.3807 - classification_output_accuracy: 0.4924 - ordinal_regression_output_accuracy: 0.6381 - val_loss: 1.9039 - val_regression_output_loss: 1.6126 - val_classification_output_loss: 0.0782 - val_ordinal_regression_output_loss: 0.2131 - val_regression_output_accuracy: 0.3088 - val_classification_output_accuracy: 0.4522 - val_ordinal_regression_output_accuracy: 0.6471\n","Epoch 28/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6777 - regression_output_loss: 1.3962 - classification_output_loss: 0.0743 - ordinal_regression_output_loss: 0.2072 - regression_output_accuracy: 0.3736 - classification_output_accuracy: 0.4832 - ordinal_regression_output_accuracy: 0.6391 - val_loss: 1.9887 - val_regression_output_loss: 1.7024 - val_classification_output_loss: 0.0726 - val_ordinal_regression_output_loss: 0.2137 - val_regression_output_accuracy: 0.2757 - val_classification_output_accuracy: 0.4669 - val_ordinal_regression_output_accuracy: 0.6581\n","Epoch 29/75\n","124/124 [==============================] - 14s 112ms/step - loss: 1.7007 - regression_output_loss: 1.4273 - classification_output_loss: 0.0742 - ordinal_regression_output_loss: 0.1992 - regression_output_accuracy: 0.3817 - classification_output_accuracy: 0.4736 - ordinal_regression_output_accuracy: 0.6320 - val_loss: 1.9262 - val_regression_output_loss: 1.6353 - val_classification_output_loss: 0.0754 - val_ordinal_regression_output_loss: 0.2155 - val_regression_output_accuracy: 0.2757 - val_classification_output_accuracy: 0.4559 - val_ordinal_regression_output_accuracy: 0.6397\n","Epoch 30/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6656 - regression_output_loss: 1.4007 - classification_output_loss: 0.0695 - ordinal_regression_output_loss: 0.1954 - regression_output_accuracy: 0.3726 - classification_output_accuracy: 0.4721 - ordinal_regression_output_accuracy: 0.6335 - val_loss: 1.9456 - val_regression_output_loss: 1.6610 - val_classification_output_loss: 0.0738 - val_ordinal_regression_output_loss: 0.2109 - val_regression_output_accuracy: 0.2941 - val_classification_output_accuracy: 0.4485 - val_ordinal_regression_output_accuracy: 0.6838\n","Epoch 31/75\n","124/124 [==============================] - 14s 113ms/step - loss: 1.6109 - regression_output_loss: 1.3407 - classification_output_loss: 0.0728 - ordinal_regression_output_loss: 0.1974 - regression_output_accuracy: 0.3868 - classification_output_accuracy: 0.4822 - ordinal_regression_output_accuracy: 0.6421 - val_loss: 1.9078 - val_regression_output_loss: 1.6027 - val_classification_output_loss: 0.0813 - val_ordinal_regression_output_loss: 0.2237 - val_regression_output_accuracy: 0.3199 - val_classification_output_accuracy: 0.4632 - val_ordinal_regression_output_accuracy: 0.6103\n","Epoch 32/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.7594 - regression_output_loss: 1.4840 - classification_output_loss: 0.0733 - ordinal_regression_output_loss: 0.2022 - regression_output_accuracy: 0.3624 - classification_output_accuracy: 0.4721 - ordinal_regression_output_accuracy: 0.6376 - val_loss: 1.8999 - val_regression_output_loss: 1.6168 - val_classification_output_loss: 0.0698 - val_ordinal_regression_output_loss: 0.2132 - val_regression_output_accuracy: 0.2978 - val_classification_output_accuracy: 0.4596 - val_ordinal_regression_output_accuracy: 0.6397\n","Epoch 33/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6507 - regression_output_loss: 1.3758 - classification_output_loss: 0.0744 - ordinal_regression_output_loss: 0.2004 - regression_output_accuracy: 0.3670 - classification_output_accuracy: 0.4756 - ordinal_regression_output_accuracy: 0.6320 - val_loss: 2.0051 - val_regression_output_loss: 1.7112 - val_classification_output_loss: 0.0727 - val_ordinal_regression_output_loss: 0.2212 - val_regression_output_accuracy: 0.2978 - val_classification_output_accuracy: 0.4779 - val_ordinal_regression_output_accuracy: 0.6324\n","Epoch 34/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6931 - regression_output_loss: 1.4198 - classification_output_loss: 0.0728 - ordinal_regression_output_loss: 0.2006 - regression_output_accuracy: 0.3919 - classification_output_accuracy: 0.4873 - ordinal_regression_output_accuracy: 0.6330 - val_loss: 2.0067 - val_regression_output_loss: 1.7121 - val_classification_output_loss: 0.0773 - val_ordinal_regression_output_loss: 0.2173 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4412 - val_ordinal_regression_output_accuracy: 0.6507\n","Epoch 35/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6346 - regression_output_loss: 1.3503 - classification_output_loss: 0.0730 - ordinal_regression_output_loss: 0.2113 - regression_output_accuracy: 0.3670 - classification_output_accuracy: 0.4802 - ordinal_regression_output_accuracy: 0.6305 - val_loss: 1.9079 - val_regression_output_loss: 1.6060 - val_classification_output_loss: 0.0789 - val_ordinal_regression_output_loss: 0.2230 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4191 - val_ordinal_regression_output_accuracy: 0.6434\n","Epoch 36/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.5685 - regression_output_loss: 1.2992 - classification_output_loss: 0.0731 - ordinal_regression_output_loss: 0.1963 - regression_output_accuracy: 0.3807 - classification_output_accuracy: 0.4685 - ordinal_regression_output_accuracy: 0.6406 - val_loss: 1.9183 - val_regression_output_loss: 1.6125 - val_classification_output_loss: 0.0815 - val_ordinal_regression_output_loss: 0.2242 - val_regression_output_accuracy: 0.3015 - val_classification_output_accuracy: 0.4632 - val_ordinal_regression_output_accuracy: 0.6654\n","Epoch 37/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.7239 - regression_output_loss: 1.4475 - classification_output_loss: 0.0709 - ordinal_regression_output_loss: 0.2056 - regression_output_accuracy: 0.3670 - classification_output_accuracy: 0.4756 - ordinal_regression_output_accuracy: 0.6325 - val_loss: 2.0178 - val_regression_output_loss: 1.7308 - val_classification_output_loss: 0.0746 - val_ordinal_regression_output_loss: 0.2123 - val_regression_output_accuracy: 0.2904 - val_classification_output_accuracy: 0.4559 - val_ordinal_regression_output_accuracy: 0.6691\n","Epoch 38/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.6334 - regression_output_loss: 1.3661 - classification_output_loss: 0.0710 - ordinal_regression_output_loss: 0.1963 - regression_output_accuracy: 0.3721 - classification_output_accuracy: 0.4792 - ordinal_regression_output_accuracy: 0.6396 - val_loss: 1.8249 - val_regression_output_loss: 1.5579 - val_classification_output_loss: 0.0701 - val_ordinal_regression_output_loss: 0.1969 - val_regression_output_accuracy: 0.3051 - val_classification_output_accuracy: 0.4926 - val_ordinal_regression_output_accuracy: 0.5993\n","Epoch 39/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.7199 - regression_output_loss: 1.4444 - classification_output_loss: 0.0746 - ordinal_regression_output_loss: 0.2008 - regression_output_accuracy: 0.3777 - classification_output_accuracy: 0.4731 - ordinal_regression_output_accuracy: 0.6487 - val_loss: 2.0912 - val_regression_output_loss: 1.7912 - val_classification_output_loss: 0.0754 - val_ordinal_regression_output_loss: 0.2246 - val_regression_output_accuracy: 0.2904 - val_classification_output_accuracy: 0.4338 - val_ordinal_regression_output_accuracy: 0.6507\n","Epoch 40/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6310 - regression_output_loss: 1.3679 - classification_output_loss: 0.0676 - ordinal_regression_output_loss: 0.1955 - regression_output_accuracy: 0.3665 - classification_output_accuracy: 0.4919 - ordinal_regression_output_accuracy: 0.6340 - val_loss: 1.8416 - val_regression_output_loss: 1.5619 - val_classification_output_loss: 0.0738 - val_ordinal_regression_output_loss: 0.2059 - val_regression_output_accuracy: 0.2904 - val_classification_output_accuracy: 0.4412 - val_ordinal_regression_output_accuracy: 0.6213\n","Epoch 41/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.7382 - regression_output_loss: 1.4586 - classification_output_loss: 0.0739 - ordinal_regression_output_loss: 0.2056 - regression_output_accuracy: 0.3640 - classification_output_accuracy: 0.4721 - ordinal_regression_output_accuracy: 0.6431 - val_loss: 1.8095 - val_regression_output_loss: 1.5170 - val_classification_output_loss: 0.0772 - val_ordinal_regression_output_loss: 0.2153 - val_regression_output_accuracy: 0.3199 - val_classification_output_accuracy: 0.4265 - val_ordinal_regression_output_accuracy: 0.6360\n","Epoch 42/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6550 - regression_output_loss: 1.3925 - classification_output_loss: 0.0684 - ordinal_regression_output_loss: 0.1941 - regression_output_accuracy: 0.3665 - classification_output_accuracy: 0.4970 - ordinal_regression_output_accuracy: 0.6315 - val_loss: 1.6119 - val_regression_output_loss: 1.3179 - val_classification_output_loss: 0.0701 - val_ordinal_regression_output_loss: 0.2240 - val_regression_output_accuracy: 0.2941 - val_classification_output_accuracy: 0.4632 - val_ordinal_regression_output_accuracy: 0.6029\n","Epoch 43/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6717 - regression_output_loss: 1.3995 - classification_output_loss: 0.0710 - ordinal_regression_output_loss: 0.2013 - regression_output_accuracy: 0.3594 - classification_output_accuracy: 0.4883 - ordinal_regression_output_accuracy: 0.6421 - val_loss: 1.8398 - val_regression_output_loss: 1.5578 - val_classification_output_loss: 0.0703 - val_ordinal_regression_output_loss: 0.2117 - val_regression_output_accuracy: 0.3051 - val_classification_output_accuracy: 0.4596 - val_ordinal_regression_output_accuracy: 0.6324\n","Epoch 44/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.7314 - regression_output_loss: 1.4503 - classification_output_loss: 0.0763 - ordinal_regression_output_loss: 0.2048 - regression_output_accuracy: 0.3655 - classification_output_accuracy: 0.4635 - ordinal_regression_output_accuracy: 0.6345 - val_loss: 1.8331 - val_regression_output_loss: 1.5327 - val_classification_output_loss: 0.0775 - val_ordinal_regression_output_loss: 0.2230 - val_regression_output_accuracy: 0.3235 - val_classification_output_accuracy: 0.4963 - val_ordinal_regression_output_accuracy: 0.6471\n","Epoch 45/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6443 - regression_output_loss: 1.3795 - classification_output_loss: 0.0712 - ordinal_regression_output_loss: 0.1937 - regression_output_accuracy: 0.3782 - classification_output_accuracy: 0.4883 - ordinal_regression_output_accuracy: 0.6350 - val_loss: 2.0051 - val_regression_output_loss: 1.7088 - val_classification_output_loss: 0.0767 - val_ordinal_regression_output_loss: 0.2197 - val_regression_output_accuracy: 0.2794 - val_classification_output_accuracy: 0.4559 - val_ordinal_regression_output_accuracy: 0.6176\n","Epoch 46/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.7607 - regression_output_loss: 1.4920 - classification_output_loss: 0.0738 - ordinal_regression_output_loss: 0.1948 - regression_output_accuracy: 0.3594 - classification_output_accuracy: 0.4888 - ordinal_regression_output_accuracy: 0.6437 - val_loss: 1.8986 - val_regression_output_loss: 1.6022 - val_classification_output_loss: 0.0757 - val_ordinal_regression_output_loss: 0.2208 - val_regression_output_accuracy: 0.2941 - val_classification_output_accuracy: 0.4412 - val_ordinal_regression_output_accuracy: 0.6250\n","Epoch 47/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6256 - regression_output_loss: 1.3563 - classification_output_loss: 0.0729 - ordinal_regression_output_loss: 0.1964 - regression_output_accuracy: 0.3726 - classification_output_accuracy: 0.4741 - ordinal_regression_output_accuracy: 0.6325 - val_loss: 2.0076 - val_regression_output_loss: 1.7254 - val_classification_output_loss: 0.0707 - val_ordinal_regression_output_loss: 0.2115 - val_regression_output_accuracy: 0.3015 - val_classification_output_accuracy: 0.4338 - val_ordinal_regression_output_accuracy: 0.6434\n","Epoch 48/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6322 - regression_output_loss: 1.3543 - classification_output_loss: 0.0726 - ordinal_regression_output_loss: 0.2054 - regression_output_accuracy: 0.3883 - classification_output_accuracy: 0.4761 - ordinal_regression_output_accuracy: 0.6355 - val_loss: 1.9576 - val_regression_output_loss: 1.6698 - val_classification_output_loss: 0.0759 - val_ordinal_regression_output_loss: 0.2120 - val_regression_output_accuracy: 0.2757 - val_classification_output_accuracy: 0.4338 - val_ordinal_regression_output_accuracy: 0.6397\n","Epoch 49/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.5928 - regression_output_loss: 1.3320 - classification_output_loss: 0.0666 - ordinal_regression_output_loss: 0.1942 - regression_output_accuracy: 0.3726 - classification_output_accuracy: 0.5010 - ordinal_regression_output_accuracy: 0.6345 - val_loss: 1.9020 - val_regression_output_loss: 1.5989 - val_classification_output_loss: 0.0775 - val_ordinal_regression_output_loss: 0.2255 - val_regression_output_accuracy: 0.2831 - val_classification_output_accuracy: 0.4706 - val_ordinal_regression_output_accuracy: 0.6507\n","Epoch 50/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.6429 - regression_output_loss: 1.3668 - classification_output_loss: 0.0746 - ordinal_regression_output_loss: 0.2016 - regression_output_accuracy: 0.3751 - classification_output_accuracy: 0.4716 - ordinal_regression_output_accuracy: 0.6279 - val_loss: 1.9840 - val_regression_output_loss: 1.6954 - val_classification_output_loss: 0.0779 - val_ordinal_regression_output_loss: 0.2107 - val_regression_output_accuracy: 0.3346 - val_classification_output_accuracy: 0.4338 - val_ordinal_regression_output_accuracy: 0.6324\n","Epoch 51/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.7277 - regression_output_loss: 1.4517 - classification_output_loss: 0.0712 - ordinal_regression_output_loss: 0.2048 - regression_output_accuracy: 0.3772 - classification_output_accuracy: 0.4797 - ordinal_regression_output_accuracy: 0.6178 - val_loss: 1.9782 - val_regression_output_loss: 1.6963 - val_classification_output_loss: 0.0700 - val_ordinal_regression_output_loss: 0.2118 - val_regression_output_accuracy: 0.3015 - val_classification_output_accuracy: 0.4559 - val_ordinal_regression_output_accuracy: 0.6434\n","Epoch 52/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6555 - regression_output_loss: 1.3800 - classification_output_loss: 0.0729 - ordinal_regression_output_loss: 0.2025 - regression_output_accuracy: 0.3777 - classification_output_accuracy: 0.4832 - ordinal_regression_output_accuracy: 0.6365 - val_loss: 1.9193 - val_regression_output_loss: 1.6404 - val_classification_output_loss: 0.0772 - val_ordinal_regression_output_loss: 0.2016 - val_regression_output_accuracy: 0.2978 - val_classification_output_accuracy: 0.4632 - val_ordinal_regression_output_accuracy: 0.6581\n","Epoch 53/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6941 - regression_output_loss: 1.4325 - classification_output_loss: 0.0690 - ordinal_regression_output_loss: 0.1926 - regression_output_accuracy: 0.3670 - classification_output_accuracy: 0.4924 - ordinal_regression_output_accuracy: 0.6254 - val_loss: 1.8685 - val_regression_output_loss: 1.5714 - val_classification_output_loss: 0.0705 - val_ordinal_regression_output_loss: 0.2266 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4228 - val_ordinal_regression_output_accuracy: 0.6176\n","Epoch 54/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.7066 - regression_output_loss: 1.4293 - classification_output_loss: 0.0750 - ordinal_regression_output_loss: 0.2024 - regression_output_accuracy: 0.3604 - classification_output_accuracy: 0.4802 - ordinal_regression_output_accuracy: 0.6310 - val_loss: 1.8679 - val_regression_output_loss: 1.5986 - val_classification_output_loss: 0.0729 - val_ordinal_regression_output_loss: 0.1963 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4412 - val_ordinal_regression_output_accuracy: 0.6103\n","Epoch 55/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6587 - regression_output_loss: 1.3960 - classification_output_loss: 0.0706 - ordinal_regression_output_loss: 0.1921 - regression_output_accuracy: 0.3741 - classification_output_accuracy: 0.4853 - ordinal_regression_output_accuracy: 0.6320 - val_loss: 1.8958 - val_regression_output_loss: 1.6209 - val_classification_output_loss: 0.0731 - val_ordinal_regression_output_loss: 0.2018 - val_regression_output_accuracy: 0.3088 - val_classification_output_accuracy: 0.4522 - val_ordinal_regression_output_accuracy: 0.6691\n","Epoch 56/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6333 - regression_output_loss: 1.3650 - classification_output_loss: 0.0716 - ordinal_regression_output_loss: 0.1967 - regression_output_accuracy: 0.3721 - classification_output_accuracy: 0.4792 - ordinal_regression_output_accuracy: 0.6264 - val_loss: 1.7971 - val_regression_output_loss: 1.5176 - val_classification_output_loss: 0.0744 - val_ordinal_regression_output_loss: 0.2052 - val_regression_output_accuracy: 0.3125 - val_classification_output_accuracy: 0.4301 - val_ordinal_regression_output_accuracy: 0.6507\n","Epoch 57/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.7416 - regression_output_loss: 1.4606 - classification_output_loss: 0.0730 - ordinal_regression_output_loss: 0.2080 - regression_output_accuracy: 0.3751 - classification_output_accuracy: 0.4848 - ordinal_regression_output_accuracy: 0.6279 - val_loss: 1.8823 - val_regression_output_loss: 1.5820 - val_classification_output_loss: 0.0781 - val_ordinal_regression_output_loss: 0.2221 - val_regression_output_accuracy: 0.2941 - val_classification_output_accuracy: 0.4669 - val_ordinal_regression_output_accuracy: 0.6360\n","Epoch 58/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.6893 - regression_output_loss: 1.4207 - classification_output_loss: 0.0696 - ordinal_regression_output_loss: 0.1990 - regression_output_accuracy: 0.3629 - classification_output_accuracy: 0.4868 - ordinal_regression_output_accuracy: 0.6259 - val_loss: 1.8728 - val_regression_output_loss: 1.5936 - val_classification_output_loss: 0.0759 - val_ordinal_regression_output_loss: 0.2034 - val_regression_output_accuracy: 0.2684 - val_classification_output_accuracy: 0.4338 - val_ordinal_regression_output_accuracy: 0.6618\n","Epoch 59/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.7325 - regression_output_loss: 1.4608 - classification_output_loss: 0.0723 - ordinal_regression_output_loss: 0.1994 - regression_output_accuracy: 0.3827 - classification_output_accuracy: 0.4766 - ordinal_regression_output_accuracy: 0.6381 - val_loss: 1.8760 - val_regression_output_loss: 1.5823 - val_classification_output_loss: 0.0756 - val_ordinal_regression_output_loss: 0.2181 - val_regression_output_accuracy: 0.2794 - val_classification_output_accuracy: 0.4485 - val_ordinal_regression_output_accuracy: 0.6213\n","Epoch 60/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.6474 - regression_output_loss: 1.3743 - classification_output_loss: 0.0743 - ordinal_regression_output_loss: 0.1988 - regression_output_accuracy: 0.3858 - classification_output_accuracy: 0.4751 - ordinal_regression_output_accuracy: 0.6310 - val_loss: 1.9481 - val_regression_output_loss: 1.6540 - val_classification_output_loss: 0.0744 - val_ordinal_regression_output_loss: 0.2198 - val_regression_output_accuracy: 0.3199 - val_classification_output_accuracy: 0.4779 - val_ordinal_regression_output_accuracy: 0.6397\n","Epoch 61/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6266 - regression_output_loss: 1.3499 - classification_output_loss: 0.0700 - ordinal_regression_output_loss: 0.2066 - regression_output_accuracy: 0.3569 - classification_output_accuracy: 0.4944 - ordinal_regression_output_accuracy: 0.6310 - val_loss: 2.0884 - val_regression_output_loss: 1.7698 - val_classification_output_loss: 0.0826 - val_ordinal_regression_output_loss: 0.2360 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4522 - val_ordinal_regression_output_accuracy: 0.6801\n","Epoch 62/75\n","124/124 [==============================] - 14s 111ms/step - loss: 1.6696 - regression_output_loss: 1.3891 - classification_output_loss: 0.0747 - ordinal_regression_output_loss: 0.2058 - regression_output_accuracy: 0.3721 - classification_output_accuracy: 0.4701 - ordinal_regression_output_accuracy: 0.6249 - val_loss: 2.1490 - val_regression_output_loss: 1.8491 - val_classification_output_loss: 0.0711 - val_ordinal_regression_output_loss: 0.2287 - val_regression_output_accuracy: 0.3051 - val_classification_output_accuracy: 0.4559 - val_ordinal_regression_output_accuracy: 0.6397\n","Epoch 63/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.6326 - regression_output_loss: 1.3645 - classification_output_loss: 0.0705 - ordinal_regression_output_loss: 0.1975 - regression_output_accuracy: 0.3665 - classification_output_accuracy: 0.5030 - ordinal_regression_output_accuracy: 0.6254 - val_loss: 1.9026 - val_regression_output_loss: 1.6082 - val_classification_output_loss: 0.0767 - val_ordinal_regression_output_loss: 0.2176 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4779 - val_ordinal_regression_output_accuracy: 0.6066\n","Epoch 64/75\n","124/124 [==============================] - 14s 109ms/step - loss: 1.6524 - regression_output_loss: 1.3893 - classification_output_loss: 0.0681 - ordinal_regression_output_loss: 0.1950 - regression_output_accuracy: 0.3701 - classification_output_accuracy: 0.4970 - ordinal_regression_output_accuracy: 0.6335 - val_loss: 1.9503 - val_regression_output_loss: 1.6524 - val_classification_output_loss: 0.0761 - val_ordinal_regression_output_loss: 0.2218 - val_regression_output_accuracy: 0.3051 - val_classification_output_accuracy: 0.4816 - val_ordinal_regression_output_accuracy: 0.6140\n","Epoch 65/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6453 - regression_output_loss: 1.3745 - classification_output_loss: 0.0696 - ordinal_regression_output_loss: 0.2011 - regression_output_accuracy: 0.3624 - classification_output_accuracy: 0.4787 - ordinal_regression_output_accuracy: 0.6259 - val_loss: 1.9359 - val_regression_output_loss: 1.6449 - val_classification_output_loss: 0.0770 - val_ordinal_regression_output_loss: 0.2140 - val_regression_output_accuracy: 0.2831 - val_classification_output_accuracy: 0.4890 - val_ordinal_regression_output_accuracy: 0.6434\n","Epoch 66/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6310 - regression_output_loss: 1.3655 - classification_output_loss: 0.0686 - ordinal_regression_output_loss: 0.1968 - regression_output_accuracy: 0.3827 - classification_output_accuracy: 0.5015 - ordinal_regression_output_accuracy: 0.6315 - val_loss: 2.0079 - val_regression_output_loss: 1.7039 - val_classification_output_loss: 0.0807 - val_ordinal_regression_output_loss: 0.2232 - val_regression_output_accuracy: 0.2941 - val_classification_output_accuracy: 0.4559 - val_ordinal_regression_output_accuracy: 0.6544\n","Epoch 67/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6725 - regression_output_loss: 1.4037 - classification_output_loss: 0.0716 - ordinal_regression_output_loss: 0.1972 - regression_output_accuracy: 0.3751 - classification_output_accuracy: 0.4893 - ordinal_regression_output_accuracy: 0.6360 - val_loss: 2.0648 - val_regression_output_loss: 1.7761 - val_classification_output_loss: 0.0818 - val_ordinal_regression_output_loss: 0.2069 - val_regression_output_accuracy: 0.2647 - val_classification_output_accuracy: 0.4301 - val_ordinal_regression_output_accuracy: 0.6250\n","Epoch 68/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6434 - regression_output_loss: 1.3702 - classification_output_loss: 0.0735 - ordinal_regression_output_loss: 0.1997 - regression_output_accuracy: 0.3741 - classification_output_accuracy: 0.4817 - ordinal_regression_output_accuracy: 0.6391 - val_loss: 2.0851 - val_regression_output_loss: 1.7655 - val_classification_output_loss: 0.0829 - val_ordinal_regression_output_loss: 0.2367 - val_regression_output_accuracy: 0.3162 - val_classification_output_accuracy: 0.4559 - val_ordinal_regression_output_accuracy: 0.6544\n","Epoch 69/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.5929 - regression_output_loss: 1.3395 - classification_output_loss: 0.0665 - ordinal_regression_output_loss: 0.1869 - regression_output_accuracy: 0.3695 - classification_output_accuracy: 0.5010 - ordinal_regression_output_accuracy: 0.6381 - val_loss: 2.0310 - val_regression_output_loss: 1.7180 - val_classification_output_loss: 0.0801 - val_ordinal_regression_output_loss: 0.2329 - val_regression_output_accuracy: 0.2941 - val_classification_output_accuracy: 0.4118 - val_ordinal_regression_output_accuracy: 0.6360\n","Epoch 70/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.6457 - regression_output_loss: 1.3748 - classification_output_loss: 0.0744 - ordinal_regression_output_loss: 0.1965 - regression_output_accuracy: 0.3670 - classification_output_accuracy: 0.4878 - ordinal_regression_output_accuracy: 0.6411 - val_loss: 1.8867 - val_regression_output_loss: 1.5871 - val_classification_output_loss: 0.0726 - val_ordinal_regression_output_loss: 0.2271 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4191 - val_ordinal_regression_output_accuracy: 0.6103\n","Epoch 71/75\n","124/124 [==============================] - 14s 110ms/step - loss: 1.7623 - regression_output_loss: 1.4888 - classification_output_loss: 0.0741 - ordinal_regression_output_loss: 0.1993 - regression_output_accuracy: 0.3650 - classification_output_accuracy: 0.4761 - ordinal_regression_output_accuracy: 0.6391 - val_loss: 1.9855 - val_regression_output_loss: 1.6778 - val_classification_output_loss: 0.0824 - val_ordinal_regression_output_loss: 0.2253 - val_regression_output_accuracy: 0.3199 - val_classification_output_accuracy: 0.4632 - val_ordinal_regression_output_accuracy: 0.6103\n","Epoch 72/75\n","124/124 [==============================] - 13s 108ms/step - loss: 1.6900 - regression_output_loss: 1.4161 - classification_output_loss: 0.0728 - ordinal_regression_output_loss: 0.2011 - regression_output_accuracy: 0.3614 - classification_output_accuracy: 0.4914 - ordinal_regression_output_accuracy: 0.6330 - val_loss: 1.8392 - val_regression_output_loss: 1.5638 - val_classification_output_loss: 0.0684 - val_ordinal_regression_output_loss: 0.2071 - val_regression_output_accuracy: 0.3015 - val_classification_output_accuracy: 0.4301 - val_ordinal_regression_output_accuracy: 0.6471\n","Epoch 73/75\n","124/124 [==============================] - 13s 108ms/step - loss: 1.6760 - regression_output_loss: 1.4055 - classification_output_loss: 0.0720 - ordinal_regression_output_loss: 0.1985 - regression_output_accuracy: 0.3645 - classification_output_accuracy: 0.4736 - ordinal_regression_output_accuracy: 0.6355 - val_loss: 2.0405 - val_regression_output_loss: 1.7445 - val_classification_output_loss: 0.0743 - val_ordinal_regression_output_loss: 0.2217 - val_regression_output_accuracy: 0.2978 - val_classification_output_accuracy: 0.4853 - val_ordinal_regression_output_accuracy: 0.6544\n","Epoch 74/75\n","124/124 [==============================] - 13s 108ms/step - loss: 1.7077 - regression_output_loss: 1.4323 - classification_output_loss: 0.0723 - ordinal_regression_output_loss: 0.2031 - regression_output_accuracy: 0.3629 - classification_output_accuracy: 0.4888 - ordinal_regression_output_accuracy: 0.6447 - val_loss: 1.9799 - val_regression_output_loss: 1.6713 - val_classification_output_loss: 0.0816 - val_ordinal_regression_output_loss: 0.2270 - val_regression_output_accuracy: 0.2941 - val_classification_output_accuracy: 0.4265 - val_ordinal_regression_output_accuracy: 0.6654\n","Epoch 75/75\n","124/124 [==============================] - 13s 107ms/step - loss: 1.6203 - regression_output_loss: 1.3518 - classification_output_loss: 0.0724 - ordinal_regression_output_loss: 0.1961 - regression_output_accuracy: 0.3838 - classification_output_accuracy: 0.4731 - ordinal_regression_output_accuracy: 0.6325 - val_loss: 1.9134 - val_regression_output_loss: 1.6122 - val_classification_output_loss: 0.0787 - val_ordinal_regression_output_loss: 0.2225 - val_regression_output_accuracy: 0.3125 - val_classification_output_accuracy: 0.4044 - val_ordinal_regression_output_accuracy: 0.6434\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"g-HzEzISrO9q"},"source":["5 epocas"]},{"cell_type":"code","metadata":{"id":"ZCyiU1f3P73O","executionInfo":{"status":"ok","timestamp":1601599631736,"user_tz":300,"elapsed":1434,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"98937636-0599-45ee-a49d-a4fbc5a06887","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["for layer in model.layers:\n","    layer.trainable = False\n","\n","for i in range(-14,0):\n","  model.layers[i].trainable = True\n","\n","model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"functional_1\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_1 (InputLayer)            [(None, 128, 128, 3) 0                                            \n","__________________________________________________________________________________________________\n","conv1_pad (ZeroPadding2D)       (None, 134, 134, 3)  0           input_1[0][0]                    \n","__________________________________________________________________________________________________\n","conv1_conv (Conv2D)             (None, 64, 64, 64)   9472        conv1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv1_bn (BatchNormalization)   (None, 64, 64, 64)   256         conv1_conv[0][0]                 \n","__________________________________________________________________________________________________\n","conv1_relu (Activation)         (None, 64, 64, 64)   0           conv1_bn[0][0]                   \n","__________________________________________________________________________________________________\n","pool1_pad (ZeroPadding2D)       (None, 66, 66, 64)   0           conv1_relu[0][0]                 \n","__________________________________________________________________________________________________\n","pool1_pool (MaxPooling2D)       (None, 32, 32, 64)   0           pool1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv2_block1_1_conv (Conv2D)    (None, 32, 32, 64)   4160        pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_1_relu (Activation (None, 32, 32, 64)   0           conv2_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_relu (Activation (None, 32, 32, 64)   0           conv2_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_0_conv (Conv2D)    (None, 32, 32, 256)  16640       pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_0_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_add (Add)          (None, 32, 32, 256)  0           conv2_block1_0_bn[0][0]          \n","                                                                 conv2_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_out (Activation)   (None, 32, 32, 256)  0           conv2_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_1_conv (Conv2D)    (None, 32, 32, 64)   16448       conv2_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_1_relu (Activation (None, 32, 32, 64)   0           conv2_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_relu (Activation (None, 32, 32, 64)   0           conv2_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_add (Add)          (None, 32, 32, 256)  0           conv2_block1_out[0][0]           \n","                                                                 conv2_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_out (Activation)   (None, 32, 32, 256)  0           conv2_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_1_conv (Conv2D)    (None, 32, 32, 64)   16448       conv2_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_1_relu (Activation (None, 32, 32, 64)   0           conv2_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_relu (Activation (None, 32, 32, 64)   0           conv2_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_add (Add)          (None, 32, 32, 256)  0           conv2_block2_out[0][0]           \n","                                                                 conv2_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_out (Activation)   (None, 32, 32, 256)  0           conv2_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_1_conv (Conv2D)    (None, 16, 16, 128)  32896       conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_1_relu (Activation (None, 16, 16, 128)  0           conv3_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_relu (Activation (None, 16, 16, 128)  0           conv3_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_0_conv (Conv2D)    (None, 16, 16, 512)  131584      conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_0_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_add (Add)          (None, 16, 16, 512)  0           conv3_block1_0_bn[0][0]          \n","                                                                 conv3_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_out (Activation)   (None, 16, 16, 512)  0           conv3_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_1_relu (Activation (None, 16, 16, 128)  0           conv3_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_relu (Activation (None, 16, 16, 128)  0           conv3_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_add (Add)          (None, 16, 16, 512)  0           conv3_block1_out[0][0]           \n","                                                                 conv3_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_out (Activation)   (None, 16, 16, 512)  0           conv3_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_1_relu (Activation (None, 16, 16, 128)  0           conv3_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_relu (Activation (None, 16, 16, 128)  0           conv3_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_add (Add)          (None, 16, 16, 512)  0           conv3_block2_out[0][0]           \n","                                                                 conv3_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_out (Activation)   (None, 16, 16, 512)  0           conv3_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_1_relu (Activation (None, 16, 16, 128)  0           conv3_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_relu (Activation (None, 16, 16, 128)  0           conv3_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_add (Add)          (None, 16, 16, 512)  0           conv3_block3_out[0][0]           \n","                                                                 conv3_block4_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_out (Activation)   (None, 16, 16, 512)  0           conv3_block4_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_1_conv (Conv2D)    (None, 8, 8, 256)    131328      conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_1_relu (Activation (None, 8, 8, 256)    0           conv4_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_relu (Activation (None, 8, 8, 256)    0           conv4_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_0_conv (Conv2D)    (None, 8, 8, 1024)   525312      conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_0_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_add (Add)          (None, 8, 8, 1024)   0           conv4_block1_0_bn[0][0]          \n","                                                                 conv4_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_out (Activation)   (None, 8, 8, 1024)   0           conv4_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_1_relu (Activation (None, 8, 8, 256)    0           conv4_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_relu (Activation (None, 8, 8, 256)    0           conv4_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_add (Add)          (None, 8, 8, 1024)   0           conv4_block1_out[0][0]           \n","                                                                 conv4_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_out (Activation)   (None, 8, 8, 1024)   0           conv4_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_1_relu (Activation (None, 8, 8, 256)    0           conv4_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_relu (Activation (None, 8, 8, 256)    0           conv4_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_add (Add)          (None, 8, 8, 1024)   0           conv4_block2_out[0][0]           \n","                                                                 conv4_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_out (Activation)   (None, 8, 8, 1024)   0           conv4_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_1_relu (Activation (None, 8, 8, 256)    0           conv4_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_relu (Activation (None, 8, 8, 256)    0           conv4_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_add (Add)          (None, 8, 8, 1024)   0           conv4_block3_out[0][0]           \n","                                                                 conv4_block4_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_out (Activation)   (None, 8, 8, 1024)   0           conv4_block4_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block5_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_1_relu (Activation (None, 8, 8, 256)    0           conv4_block5_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block5_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block5_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_relu (Activation (None, 8, 8, 256)    0           conv4_block5_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block5_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block5_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_add (Add)          (None, 8, 8, 1024)   0           conv4_block4_out[0][0]           \n","                                                                 conv4_block5_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_out (Activation)   (None, 8, 8, 1024)   0           conv4_block5_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block5_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block6_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_1_relu (Activation (None, 8, 8, 256)    0           conv4_block6_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block6_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block6_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_relu (Activation (None, 8, 8, 256)    0           conv4_block6_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block6_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block6_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_add (Add)          (None, 8, 8, 1024)   0           conv4_block5_out[0][0]           \n","                                                                 conv4_block6_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_out (Activation)   (None, 8, 8, 1024)   0           conv4_block6_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_1_conv (Conv2D)    (None, 4, 4, 512)    524800      conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_1_relu (Activation (None, 4, 4, 512)    0           conv5_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_relu (Activation (None, 4, 4, 512)    0           conv5_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_0_conv (Conv2D)    (None, 4, 4, 2048)   2099200     conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_0_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_add (Add)          (None, 4, 4, 2048)   0           conv5_block1_0_bn[0][0]          \n","                                                                 conv5_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_out (Activation)   (None, 4, 4, 2048)   0           conv5_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_1_conv (Conv2D)    (None, 4, 4, 512)    1049088     conv5_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_1_relu (Activation (None, 4, 4, 512)    0           conv5_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_relu (Activation (None, 4, 4, 512)    0           conv5_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_add (Add)          (None, 4, 4, 2048)   0           conv5_block1_out[0][0]           \n","                                                                 conv5_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_out (Activation)   (None, 4, 4, 2048)   0           conv5_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_1_conv (Conv2D)    (None, 4, 4, 512)    1049088     conv5_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_1_relu (Activation (None, 4, 4, 512)    0           conv5_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_relu (Activation (None, 4, 4, 512)    0           conv5_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_add (Add)          (None, 4, 4, 2048)   0           conv5_block2_out[0][0]           \n","                                                                 conv5_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_out (Activation)   (None, 4, 4, 2048)   0           conv5_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","global_average_pooling2d (Globa (None, 2048)         0           conv5_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","global_max_pooling2d (GlobalMax (None, 2048)         0           conv5_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","batch_normalization (BatchNorma (None, 2048)         8192        global_average_pooling2d[0][0]   \n","__________________________________________________________________________________________________\n","batch_normalization_1 (BatchNor (None, 2048)         8192        global_max_pooling2d[0][0]       \n","__________________________________________________________________________________________________\n","concatenate (Concatenate)       (None, 4096)         0           batch_normalization[0][0]        \n","                                                                 batch_normalization_1[0][0]      \n","__________________________________________________________________________________________________\n","dense (Dense)                   (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dense_1 (Dense)                 (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dense_2 (Dense)                 (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dropout (Dropout)               (None, 2048)         0           dense[0][0]                      \n","__________________________________________________________________________________________________\n","dropout_1 (Dropout)             (None, 2048)         0           dense_1[0][0]                    \n","__________________________________________________________________________________________________\n","dropout_2 (Dropout)             (None, 2048)         0           dense_2[0][0]                    \n","__________________________________________________________________________________________________\n","regression_output (Dense)       (None, 1)            2049        dropout[0][0]                    \n","__________________________________________________________________________________________________\n","classification_output (Dense)   (None, 5)            10245       dropout_1[0][0]                  \n","__________________________________________________________________________________________________\n","ordinal_regression_output (Dens (None, 5)            10245       dropout_2[0][0]                  \n","==================================================================================================\n","Total params: 48,798,603\n","Trainable params: 25,202,699\n","Non-trainable params: 23,595,904\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"QgnRzSn-0wiW","executionInfo":{"status":"ok","timestamp":1601599704696,"user_tz":300,"elapsed":54805,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"4ccfd804-2778-4d7d-e15d-0587ff193973","colab":{"base_uri":"https://localhost:8080/","height":275}},"source":["model.compile(optimizer  = opt,\n","              loss={'regression_output': mean_squared_error, \n","                    'classification_output': categorical_focal_loss(alpha=.25, gamma=2) ,\n","                    'ordinal_regression_output' : binary_focal_loss(alpha=.25, gamma=2)\n","                    },\n","              metrics = ['accuracy'])\n","\n","\n","history = model.fit(train_generator,\n","                              steps_per_epoch=STEP_SIZE_TRAIN,\n","                              validation_data=valid_generator,\n","                              validation_steps=STEP_SIZE_VALID,\n","                              epochs=5,\n","                              callbacks = callback_list,\n","                              verbose=1).history"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:720: UserWarning: This ImageDataGenerator specifies `featurewise_center`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n","/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:739: UserWarning: This ImageDataGenerator specifies `zca_whitening`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"},{"output_type":"stream","text":["Epoch 1/5\n","124/124 [==============================] - 10s 82ms/step - loss: 1.6052 - regression_output_loss: 1.3379 - classification_output_loss: 0.0725 - ordinal_regression_output_loss: 0.1948 - regression_output_accuracy: 0.3680 - classification_output_accuracy: 0.4807 - ordinal_regression_output_accuracy: 0.6503 - val_loss: 1.7344 - val_regression_output_loss: 1.4543 - val_classification_output_loss: 0.0722 - val_ordinal_regression_output_loss: 0.2079 - val_regression_output_accuracy: 0.3125 - val_classification_output_accuracy: 0.4412 - val_ordinal_regression_output_accuracy: 0.6176\n","Epoch 2/5\n","124/124 [==============================] - 9s 74ms/step - loss: 1.5605 - regression_output_loss: 1.2980 - classification_output_loss: 0.0709 - ordinal_regression_output_loss: 0.1916 - regression_output_accuracy: 0.3787 - classification_output_accuracy: 0.4909 - ordinal_regression_output_accuracy: 0.6477 - val_loss: 1.7191 - val_regression_output_loss: 1.4561 - val_classification_output_loss: 0.0709 - val_ordinal_regression_output_loss: 0.1921 - val_regression_output_accuracy: 0.2978 - val_classification_output_accuracy: 0.4632 - val_ordinal_regression_output_accuracy: 0.6324\n","Epoch 3/5\n","124/124 [==============================] - 9s 74ms/step - loss: 1.5479 - regression_output_loss: 1.2901 - classification_output_loss: 0.0685 - ordinal_regression_output_loss: 0.1892 - regression_output_accuracy: 0.3685 - classification_output_accuracy: 0.5071 - ordinal_regression_output_accuracy: 0.6371 - val_loss: 1.8492 - val_regression_output_loss: 1.5675 - val_classification_output_loss: 0.0715 - val_ordinal_regression_output_loss: 0.2101 - val_regression_output_accuracy: 0.3051 - val_classification_output_accuracy: 0.4338 - val_ordinal_regression_output_accuracy: 0.6250\n","Epoch 4/5\n","124/124 [==============================] - 9s 74ms/step - loss: 1.5957 - regression_output_loss: 1.3266 - classification_output_loss: 0.0738 - ordinal_regression_output_loss: 0.1954 - regression_output_accuracy: 0.3777 - classification_output_accuracy: 0.4660 - ordinal_regression_output_accuracy: 0.6523 - val_loss: 2.0579 - val_regression_output_loss: 1.7627 - val_classification_output_loss: 0.0774 - val_ordinal_regression_output_loss: 0.2179 - val_regression_output_accuracy: 0.2647 - val_classification_output_accuracy: 0.4044 - val_ordinal_regression_output_accuracy: 0.6324\n","Epoch 5/5\n","124/124 [==============================] - 9s 74ms/step - loss: 1.5682 - regression_output_loss: 1.3048 - classification_output_loss: 0.0679 - ordinal_regression_output_loss: 0.1955 - regression_output_accuracy: 0.3817 - classification_output_accuracy: 0.4924 - ordinal_regression_output_accuracy: 0.6391 - val_loss: 1.8271 - val_regression_output_loss: 1.5387 - val_classification_output_loss: 0.0728 - val_ordinal_regression_output_loss: 0.2156 - val_regression_output_accuracy: 0.2868 - val_classification_output_accuracy: 0.4596 - val_ordinal_regression_output_accuracy: 0.6360\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dr_zcBwf1Tq3"},"source":["model.save(\"/content/gdrive/My Drive/tesis2/model_main_training.h5\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MF2YSW7s2Ep1","executionInfo":{"status":"ok","timestamp":1601599775923,"user_tz":300,"elapsed":1307,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"3b6fe4e1-4aa8-4e34-980d-e03127cafed8","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["for layer in model.layers:\n","    layer.trainable = True\n","model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"functional_1\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_1 (InputLayer)            [(None, 128, 128, 3) 0                                            \n","__________________________________________________________________________________________________\n","conv1_pad (ZeroPadding2D)       (None, 134, 134, 3)  0           input_1[0][0]                    \n","__________________________________________________________________________________________________\n","conv1_conv (Conv2D)             (None, 64, 64, 64)   9472        conv1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv1_bn (BatchNormalization)   (None, 64, 64, 64)   256         conv1_conv[0][0]                 \n","__________________________________________________________________________________________________\n","conv1_relu (Activation)         (None, 64, 64, 64)   0           conv1_bn[0][0]                   \n","__________________________________________________________________________________________________\n","pool1_pad (ZeroPadding2D)       (None, 66, 66, 64)   0           conv1_relu[0][0]                 \n","__________________________________________________________________________________________________\n","pool1_pool (MaxPooling2D)       (None, 32, 32, 64)   0           pool1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv2_block1_1_conv (Conv2D)    (None, 32, 32, 64)   4160        pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_1_relu (Activation (None, 32, 32, 64)   0           conv2_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_relu (Activation (None, 32, 32, 64)   0           conv2_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_0_conv (Conv2D)    (None, 32, 32, 256)  16640       pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_0_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_add (Add)          (None, 32, 32, 256)  0           conv2_block1_0_bn[0][0]          \n","                                                                 conv2_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_out (Activation)   (None, 32, 32, 256)  0           conv2_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_1_conv (Conv2D)    (None, 32, 32, 64)   16448       conv2_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_1_relu (Activation (None, 32, 32, 64)   0           conv2_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_relu (Activation (None, 32, 32, 64)   0           conv2_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_add (Add)          (None, 32, 32, 256)  0           conv2_block1_out[0][0]           \n","                                                                 conv2_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_out (Activation)   (None, 32, 32, 256)  0           conv2_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_1_conv (Conv2D)    (None, 32, 32, 64)   16448       conv2_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_1_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_1_relu (Activation (None, 32, 32, 64)   0           conv2_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_2_conv (Conv2D)    (None, 32, 32, 64)   36928       conv2_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_bn (BatchNormali (None, 32, 32, 64)   256         conv2_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_relu (Activation (None, 32, 32, 64)   0           conv2_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_3_conv (Conv2D)    (None, 32, 32, 256)  16640       conv2_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_3_bn (BatchNormali (None, 32, 32, 256)  1024        conv2_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_add (Add)          (None, 32, 32, 256)  0           conv2_block2_out[0][0]           \n","                                                                 conv2_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_out (Activation)   (None, 32, 32, 256)  0           conv2_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_1_conv (Conv2D)    (None, 16, 16, 128)  32896       conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_1_relu (Activation (None, 16, 16, 128)  0           conv3_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_relu (Activation (None, 16, 16, 128)  0           conv3_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_0_conv (Conv2D)    (None, 16, 16, 512)  131584      conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_0_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_add (Add)          (None, 16, 16, 512)  0           conv3_block1_0_bn[0][0]          \n","                                                                 conv3_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_out (Activation)   (None, 16, 16, 512)  0           conv3_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_1_relu (Activation (None, 16, 16, 128)  0           conv3_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_relu (Activation (None, 16, 16, 128)  0           conv3_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_add (Add)          (None, 16, 16, 512)  0           conv3_block1_out[0][0]           \n","                                                                 conv3_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_out (Activation)   (None, 16, 16, 512)  0           conv3_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_1_relu (Activation (None, 16, 16, 128)  0           conv3_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_relu (Activation (None, 16, 16, 128)  0           conv3_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_add (Add)          (None, 16, 16, 512)  0           conv3_block2_out[0][0]           \n","                                                                 conv3_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_out (Activation)   (None, 16, 16, 512)  0           conv3_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_1_conv (Conv2D)    (None, 16, 16, 128)  65664       conv3_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_1_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_1_relu (Activation (None, 16, 16, 128)  0           conv3_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_2_conv (Conv2D)    (None, 16, 16, 128)  147584      conv3_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_bn (BatchNormali (None, 16, 16, 128)  512         conv3_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_relu (Activation (None, 16, 16, 128)  0           conv3_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_3_conv (Conv2D)    (None, 16, 16, 512)  66048       conv3_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_3_bn (BatchNormali (None, 16, 16, 512)  2048        conv3_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_add (Add)          (None, 16, 16, 512)  0           conv3_block3_out[0][0]           \n","                                                                 conv3_block4_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_out (Activation)   (None, 16, 16, 512)  0           conv3_block4_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_1_conv (Conv2D)    (None, 8, 8, 256)    131328      conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_1_relu (Activation (None, 8, 8, 256)    0           conv4_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_relu (Activation (None, 8, 8, 256)    0           conv4_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_0_conv (Conv2D)    (None, 8, 8, 1024)   525312      conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_0_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_add (Add)          (None, 8, 8, 1024)   0           conv4_block1_0_bn[0][0]          \n","                                                                 conv4_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_out (Activation)   (None, 8, 8, 1024)   0           conv4_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_1_relu (Activation (None, 8, 8, 256)    0           conv4_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_relu (Activation (None, 8, 8, 256)    0           conv4_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_add (Add)          (None, 8, 8, 1024)   0           conv4_block1_out[0][0]           \n","                                                                 conv4_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_out (Activation)   (None, 8, 8, 1024)   0           conv4_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_1_relu (Activation (None, 8, 8, 256)    0           conv4_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_relu (Activation (None, 8, 8, 256)    0           conv4_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_add (Add)          (None, 8, 8, 1024)   0           conv4_block2_out[0][0]           \n","                                                                 conv4_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_out (Activation)   (None, 8, 8, 1024)   0           conv4_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_1_relu (Activation (None, 8, 8, 256)    0           conv4_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_relu (Activation (None, 8, 8, 256)    0           conv4_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_add (Add)          (None, 8, 8, 1024)   0           conv4_block3_out[0][0]           \n","                                                                 conv4_block4_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_out (Activation)   (None, 8, 8, 1024)   0           conv4_block4_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block5_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_1_relu (Activation (None, 8, 8, 256)    0           conv4_block5_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block5_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block5_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_relu (Activation (None, 8, 8, 256)    0           conv4_block5_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block5_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block5_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_add (Add)          (None, 8, 8, 1024)   0           conv4_block4_out[0][0]           \n","                                                                 conv4_block5_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_out (Activation)   (None, 8, 8, 1024)   0           conv4_block5_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_1_conv (Conv2D)    (None, 8, 8, 256)    262400      conv4_block5_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_1_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block6_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_1_relu (Activation (None, 8, 8, 256)    0           conv4_block6_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_2_conv (Conv2D)    (None, 8, 8, 256)    590080      conv4_block6_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_bn (BatchNormali (None, 8, 8, 256)    1024        conv4_block6_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_relu (Activation (None, 8, 8, 256)    0           conv4_block6_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_3_conv (Conv2D)    (None, 8, 8, 1024)   263168      conv4_block6_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_3_bn (BatchNormali (None, 8, 8, 1024)   4096        conv4_block6_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_add (Add)          (None, 8, 8, 1024)   0           conv4_block5_out[0][0]           \n","                                                                 conv4_block6_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_out (Activation)   (None, 8, 8, 1024)   0           conv4_block6_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_1_conv (Conv2D)    (None, 4, 4, 512)    524800      conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_1_relu (Activation (None, 4, 4, 512)    0           conv5_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_relu (Activation (None, 4, 4, 512)    0           conv5_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_0_conv (Conv2D)    (None, 4, 4, 2048)   2099200     conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_0_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_add (Add)          (None, 4, 4, 2048)   0           conv5_block1_0_bn[0][0]          \n","                                                                 conv5_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_out (Activation)   (None, 4, 4, 2048)   0           conv5_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_1_conv (Conv2D)    (None, 4, 4, 512)    1049088     conv5_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_1_relu (Activation (None, 4, 4, 512)    0           conv5_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_relu (Activation (None, 4, 4, 512)    0           conv5_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_add (Add)          (None, 4, 4, 2048)   0           conv5_block1_out[0][0]           \n","                                                                 conv5_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_out (Activation)   (None, 4, 4, 2048)   0           conv5_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_1_conv (Conv2D)    (None, 4, 4, 512)    1049088     conv5_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_1_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_1_relu (Activation (None, 4, 4, 512)    0           conv5_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_2_conv (Conv2D)    (None, 4, 4, 512)    2359808     conv5_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_bn (BatchNormali (None, 4, 4, 512)    2048        conv5_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_relu (Activation (None, 4, 4, 512)    0           conv5_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_3_conv (Conv2D)    (None, 4, 4, 2048)   1050624     conv5_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_3_bn (BatchNormali (None, 4, 4, 2048)   8192        conv5_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_add (Add)          (None, 4, 4, 2048)   0           conv5_block2_out[0][0]           \n","                                                                 conv5_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_out (Activation)   (None, 4, 4, 2048)   0           conv5_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","global_average_pooling2d (Globa (None, 2048)         0           conv5_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","global_max_pooling2d (GlobalMax (None, 2048)         0           conv5_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","batch_normalization (BatchNorma (None, 2048)         8192        global_average_pooling2d[0][0]   \n","__________________________________________________________________________________________________\n","batch_normalization_1 (BatchNor (None, 2048)         8192        global_max_pooling2d[0][0]       \n","__________________________________________________________________________________________________\n","concatenate (Concatenate)       (None, 4096)         0           batch_normalization[0][0]        \n","                                                                 batch_normalization_1[0][0]      \n","__________________________________________________________________________________________________\n","dense (Dense)                   (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dense_1 (Dense)                 (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dense_2 (Dense)                 (None, 2048)         8390656     concatenate[0][0]                \n","__________________________________________________________________________________________________\n","dropout (Dropout)               (None, 2048)         0           dense[0][0]                      \n","__________________________________________________________________________________________________\n","dropout_1 (Dropout)             (None, 2048)         0           dense_1[0][0]                    \n","__________________________________________________________________________________________________\n","dropout_2 (Dropout)             (None, 2048)         0           dense_2[0][0]                    \n","__________________________________________________________________________________________________\n","regression_output (Dense)       (None, 1)            2049        dropout[0][0]                    \n","__________________________________________________________________________________________________\n","classification_output (Dense)   (None, 5)            10245       dropout_1[0][0]                  \n","__________________________________________________________________________________________________\n","ordinal_regression_output (Dens (None, 5)            10245       dropout_2[0][0]                  \n","==================================================================================================\n","Total params: 48,798,603\n","Trainable params: 48,737,291\n","Non-trainable params: 61,312\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ce1y75GK5bjV"},"source":["aptosdf = pd.read_csv('/content/gdrive/My Drive/tesis/aptos/train.csv')\n","x_trainaptos = np.load('/content/gdrive/My Drive/tesis/aptos/train128.npy')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MNwpGJBP8YJT","executionInfo":{"status":"ok","timestamp":1601599813998,"user_tz":300,"elapsed":1156,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"9853bcf5-b5f3-4013-e09d-596eeb058d51","colab":{"base_uri":"https://localhost:8080/","height":359}},"source":["aptosdf.head(10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_code</th>\n","      <th>diagnosis</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000c1434d8d7</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>001639a390f0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0024cdab0c1e</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>002c21358ce6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>005b95c28852</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0083ee8054ee</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0097f532ac9f</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>00a8624548a9</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>00b74780d31d</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>00cb6555d108</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        id_code  diagnosis\n","0  000c1434d8d7          2\n","1  001639a390f0          4\n","2  0024cdab0c1e          1\n","3  002c21358ce6          0\n","4  005b95c28852          0\n","5  0083ee8054ee          4\n","6  0097f532ac9f          0\n","7  00a8624548a9          2\n","8  00b74780d31d          2\n","9  00cb6555d108          1"]},"metadata":{"tags":[]},"execution_count":92}]},{"cell_type":"code","metadata":{"id":"6od9bhk47ufe"},"source":["y_trainaptos = pd.get_dummies(aptosdf['diagnosis'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QDY39kNa9Fmg"},"source":["x_train1, x_val1, y_train1, y_val1 = train_test_split(\n","    x_trainaptos, y_trainaptos, \n","    test_size=0.10, \n","    random_state=2020\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xndprZxI9wyN"},"source":["y_train1 = y_train1.astype('float32')\n","y_val1 = y_val1.astype('float32')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NeDLDAjduxa-"},"source":["y_train1=np.array(y_train1)\n","y_val1 = np.array(y_val1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yNNbdJOE99JT","executionInfo":{"status":"ok","timestamp":1601600166949,"user_tz":300,"elapsed":962,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"f6d12eee-d498-4ab9-8f28-6c6b10b26cf9","colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["train_datagen=ImageDataGenerator(rescale=1./255,rotation_range=360,brightness_range=[0.5, 1.5],\n","                                     zoom_range=[1, 1.2],zca_whitening=True,horizontal_flip=True,\n","                                     vertical_flip=True,fill_mode='constant',cval=0.)\n","\n","train_generator = multiple_outputs(generator = train_datagen, X=x_train1, Y=y_train1,\n","                                   batch_size=BATCH_SIZE)\n","     \n","valid_generator = multiple_outputs(generator = train_datagen, X=x_val1,Y=y_val1,\n","                                   batch_size=BATCH_SIZE)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:337: UserWarning: This ImageDataGenerator specifies `zca_whitening`, which overrides setting of `featurewise_center`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"66o1r8pk-EkT","executionInfo":{"status":"ok","timestamp":1601600171214,"user_tz":300,"elapsed":839,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"7840ae3c-6c6e-47ed-89b1-900862a934c8","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["STEP_SIZE_TRAIN = len(x_train1)//BATCH_SIZE\n","STEP_SIZE_VALID = len(x_val1)//BATCH_SIZE\n","print(STEP_SIZE_TRAIN,STEP_SIZE_VALID)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["205 22\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4g03qGUs-LL7"},"source":["STEP_SIZE = len(x_train1) // BATCH_SIZE\n","TOTAL_STEPS_1st = WARMUP_EPOCHS * STEP_SIZE"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GG1GdIE8-R3d"},"source":["cosine_lr = WarmUpCosineDecayScheduler(learning_rate_base = LEARNING_RATE,\n","                                       total_steps=TOTAL_STEPS_1st,\n","                                       warmup_learning_rate=0.0,\n","                                       warmup_steps=TOTAL_STEPS_1st,\n","                                       hold_base_rate_steps=(2 * STEP_SIZE))\n","\n","callback_list = [cosine_lr]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uD9eIshA-av7","executionInfo":{"status":"ok","timestamp":1601601232139,"user_tz":300,"elapsed":1043193,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"bcc09cd0-30e6-4fa8-ea2a-fa21a72523db","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["model.compile(optimizer  = opt,\n","              loss={'regression_output': mean_squared_error, \n","                    'classification_output': categorical_focal_loss(alpha=.25, gamma=2) ,\n","                    'ordinal_regression_output' : binary_focal_loss(alpha=.25, gamma=2)\n","                    },\n","              metrics = ['accuracy'])\n","\n","\n","history = model.fit(train_generator,\n","                              steps_per_epoch=STEP_SIZE_TRAIN,\n","                              validation_data=valid_generator,\n","                              validation_steps=STEP_SIZE_VALID,\n","                              epochs=45,\n","                              callbacks = callback_list,\n","                              verbose=1).history"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:720: UserWarning: This ImageDataGenerator specifies `featurewise_center`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n","/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:739: UserWarning: This ImageDataGenerator specifies `zca_whitening`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"},{"output_type":"stream","text":["Epoch 1/45\n","205/205 [==============================] - 23s 114ms/step - loss: 1.1146 - regression_output_loss: 0.9181 - classification_output_loss: 0.0468 - ordinal_regression_output_loss: 0.1497 - regression_output_accuracy: 0.4305 - classification_output_accuracy: 0.6140 - ordinal_regression_output_accuracy: 0.6869 - val_loss: 0.5650 - val_regression_output_loss: 0.4677 - val_classification_output_loss: 0.0246 - val_ordinal_regression_output_loss: 0.0728 - val_regression_output_accuracy: 0.5739 - val_classification_output_accuracy: 0.7159 - val_ordinal_regression_output_accuracy: 0.6307\n","Epoch 2/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.8620 - regression_output_loss: 0.7204 - classification_output_loss: 0.0345 - ordinal_regression_output_loss: 0.1070 - regression_output_accuracy: 0.4532 - classification_output_accuracy: 0.6700 - ordinal_regression_output_accuracy: 0.6697 - val_loss: 0.5268 - val_regression_output_loss: 0.4224 - val_classification_output_loss: 0.0272 - val_ordinal_regression_output_loss: 0.0772 - val_regression_output_accuracy: 0.5568 - val_classification_output_accuracy: 0.7557 - val_ordinal_regression_output_accuracy: 0.7784\n","Epoch 3/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.8102 - regression_output_loss: 0.6894 - classification_output_loss: 0.0309 - ordinal_regression_output_loss: 0.0899 - regression_output_accuracy: 0.4645 - classification_output_accuracy: 0.6844 - ordinal_regression_output_accuracy: 0.6786 - val_loss: 0.6198 - val_regression_output_loss: 0.5227 - val_classification_output_loss: 0.0259 - val_ordinal_regression_output_loss: 0.0711 - val_regression_output_accuracy: 0.4886 - val_classification_output_accuracy: 0.6932 - val_ordinal_regression_output_accuracy: 0.6392\n","Epoch 4/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.7858 - regression_output_loss: 0.6762 - classification_output_loss: 0.0271 - ordinal_regression_output_loss: 0.0826 - regression_output_accuracy: 0.4694 - classification_output_accuracy: 0.7045 - ordinal_regression_output_accuracy: 0.6786 - val_loss: 2.0556 - val_regression_output_loss: 1.9585 - val_classification_output_loss: 0.0249 - val_ordinal_regression_output_loss: 0.0722 - val_regression_output_accuracy: 0.6278 - val_classification_output_accuracy: 0.7898 - val_ordinal_regression_output_accuracy: 0.8182\n","Epoch 5/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.8218 - regression_output_loss: 0.7062 - classification_output_loss: 0.0284 - ordinal_regression_output_loss: 0.0871 - regression_output_accuracy: 0.4651 - classification_output_accuracy: 0.7008 - ordinal_regression_output_accuracy: 0.6880 - val_loss: 1.4367 - val_regression_output_loss: 1.3171 - val_classification_output_loss: 0.0342 - val_ordinal_regression_output_loss: 0.0854 - val_regression_output_accuracy: 0.2614 - val_classification_output_accuracy: 0.6108 - val_ordinal_regression_output_accuracy: 0.9943\n","Epoch 6/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.9373 - regression_output_loss: 0.8203 - classification_output_loss: 0.0285 - ordinal_regression_output_loss: 0.0885 - regression_output_accuracy: 0.4669 - classification_output_accuracy: 0.7084 - ordinal_regression_output_accuracy: 0.7386 - val_loss: 0.8044 - val_regression_output_loss: 0.7179 - val_classification_output_loss: 0.0200 - val_ordinal_regression_output_loss: 0.0665 - val_regression_output_accuracy: 0.5256 - val_classification_output_accuracy: 0.7841 - val_ordinal_regression_output_accuracy: 0.7983\n","Epoch 7/45\n","205/205 [==============================] - 23s 110ms/step - loss: 0.8792 - regression_output_loss: 0.7700 - classification_output_loss: 0.0250 - ordinal_regression_output_loss: 0.0842 - regression_output_accuracy: 0.4812 - classification_output_accuracy: 0.7295 - ordinal_regression_output_accuracy: 0.7316 - val_loss: 0.8343 - val_regression_output_loss: 0.7416 - val_classification_output_loss: 0.0239 - val_ordinal_regression_output_loss: 0.0688 - val_regression_output_accuracy: 0.5284 - val_classification_output_accuracy: 0.7699 - val_ordinal_regression_output_accuracy: 0.7585\n","Epoch 8/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9427 - regression_output_loss: 0.8268 - classification_output_loss: 0.0277 - ordinal_regression_output_loss: 0.0882 - regression_output_accuracy: 0.4678 - classification_output_accuracy: 0.7182 - ordinal_regression_output_accuracy: 0.7295 - val_loss: 0.8031 - val_regression_output_loss: 0.7109 - val_classification_output_loss: 0.0219 - val_ordinal_regression_output_loss: 0.0703 - val_regression_output_accuracy: 0.5312 - val_classification_output_accuracy: 0.7670 - val_ordinal_regression_output_accuracy: 0.7841\n","Epoch 9/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9282 - regression_output_loss: 0.8111 - classification_output_loss: 0.0280 - ordinal_regression_output_loss: 0.0891 - regression_output_accuracy: 0.4654 - classification_output_accuracy: 0.7142 - ordinal_regression_output_accuracy: 0.7335 - val_loss: 0.7469 - val_regression_output_loss: 0.6659 - val_classification_output_loss: 0.0188 - val_ordinal_regression_output_loss: 0.0622 - val_regression_output_accuracy: 0.5284 - val_classification_output_accuracy: 0.7585 - val_ordinal_regression_output_accuracy: 0.7869\n","Epoch 10/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.9196 - regression_output_loss: 0.8046 - classification_output_loss: 0.0275 - ordinal_regression_output_loss: 0.0876 - regression_output_accuracy: 0.4782 - classification_output_accuracy: 0.7243 - ordinal_regression_output_accuracy: 0.7307 - val_loss: 0.7276 - val_regression_output_loss: 0.6405 - val_classification_output_loss: 0.0201 - val_ordinal_regression_output_loss: 0.0670 - val_regression_output_accuracy: 0.5426 - val_classification_output_accuracy: 0.7670 - val_ordinal_regression_output_accuracy: 0.7898\n","Epoch 11/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9225 - regression_output_loss: 0.8017 - classification_output_loss: 0.0299 - ordinal_regression_output_loss: 0.0909 - regression_output_accuracy: 0.4642 - classification_output_accuracy: 0.7234 - ordinal_regression_output_accuracy: 0.7328 - val_loss: 0.7054 - val_regression_output_loss: 0.6186 - val_classification_output_loss: 0.0204 - val_ordinal_regression_output_loss: 0.0664 - val_regression_output_accuracy: 0.5369 - val_classification_output_accuracy: 0.7841 - val_ordinal_regression_output_accuracy: 0.7955\n","Epoch 12/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9137 - regression_output_loss: 0.7995 - classification_output_loss: 0.0264 - ordinal_regression_output_loss: 0.0878 - regression_output_accuracy: 0.4642 - classification_output_accuracy: 0.7243 - ordinal_regression_output_accuracy: 0.7252 - val_loss: 0.8333 - val_regression_output_loss: 0.7435 - val_classification_output_loss: 0.0218 - val_ordinal_regression_output_loss: 0.0681 - val_regression_output_accuracy: 0.5284 - val_classification_output_accuracy: 0.7670 - val_ordinal_regression_output_accuracy: 0.7699\n","Epoch 13/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.8930 - regression_output_loss: 0.7807 - classification_output_loss: 0.0264 - ordinal_regression_output_loss: 0.0859 - regression_output_accuracy: 0.4587 - classification_output_accuracy: 0.7176 - ordinal_regression_output_accuracy: 0.7332 - val_loss: 0.7652 - val_regression_output_loss: 0.6760 - val_classification_output_loss: 0.0207 - val_ordinal_regression_output_loss: 0.0686 - val_regression_output_accuracy: 0.5142 - val_classification_output_accuracy: 0.7528 - val_ordinal_regression_output_accuracy: 0.7670\n","Epoch 14/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9500 - regression_output_loss: 0.8293 - classification_output_loss: 0.0289 - ordinal_regression_output_loss: 0.0918 - regression_output_accuracy: 0.4596 - classification_output_accuracy: 0.7115 - ordinal_regression_output_accuracy: 0.7322 - val_loss: 0.7017 - val_regression_output_loss: 0.6194 - val_classification_output_loss: 0.0188 - val_ordinal_regression_output_loss: 0.0636 - val_regression_output_accuracy: 0.5256 - val_classification_output_accuracy: 0.7756 - val_ordinal_regression_output_accuracy: 0.7983\n","Epoch 15/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.9022 - regression_output_loss: 0.7846 - classification_output_loss: 0.0288 - ordinal_regression_output_loss: 0.0888 - regression_output_accuracy: 0.4700 - classification_output_accuracy: 0.7106 - ordinal_regression_output_accuracy: 0.7362 - val_loss: 0.9018 - val_regression_output_loss: 0.8117 - val_classification_output_loss: 0.0206 - val_ordinal_regression_output_loss: 0.0694 - val_regression_output_accuracy: 0.5142 - val_classification_output_accuracy: 0.7642 - val_ordinal_regression_output_accuracy: 0.8040\n","Epoch 16/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9508 - regression_output_loss: 0.8340 - classification_output_loss: 0.0295 - ordinal_regression_output_loss: 0.0873 - regression_output_accuracy: 0.4639 - classification_output_accuracy: 0.7158 - ordinal_regression_output_accuracy: 0.7316 - val_loss: 0.7557 - val_regression_output_loss: 0.6703 - val_classification_output_loss: 0.0178 - val_ordinal_regression_output_loss: 0.0675 - val_regression_output_accuracy: 0.5369 - val_classification_output_accuracy: 0.7727 - val_ordinal_regression_output_accuracy: 0.8153\n","Epoch 17/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.8896 - regression_output_loss: 0.7754 - classification_output_loss: 0.0279 - ordinal_regression_output_loss: 0.0862 - regression_output_accuracy: 0.4788 - classification_output_accuracy: 0.7173 - ordinal_regression_output_accuracy: 0.7295 - val_loss: 0.7910 - val_regression_output_loss: 0.7039 - val_classification_output_loss: 0.0209 - val_ordinal_regression_output_loss: 0.0662 - val_regression_output_accuracy: 0.5369 - val_classification_output_accuracy: 0.7699 - val_ordinal_regression_output_accuracy: 0.8011\n","Epoch 18/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9354 - regression_output_loss: 0.8178 - classification_output_loss: 0.0276 - ordinal_regression_output_loss: 0.0900 - regression_output_accuracy: 0.4694 - classification_output_accuracy: 0.7149 - ordinal_regression_output_accuracy: 0.7252 - val_loss: 0.7559 - val_regression_output_loss: 0.6704 - val_classification_output_loss: 0.0216 - val_ordinal_regression_output_loss: 0.0639 - val_regression_output_accuracy: 0.5199 - val_classification_output_accuracy: 0.7614 - val_ordinal_regression_output_accuracy: 0.7727\n","Epoch 19/45\n","205/205 [==============================] - 23s 110ms/step - loss: 0.9343 - regression_output_loss: 0.8200 - classification_output_loss: 0.0273 - ordinal_regression_output_loss: 0.0870 - regression_output_accuracy: 0.4599 - classification_output_accuracy: 0.7206 - ordinal_regression_output_accuracy: 0.7402 - val_loss: 0.8180 - val_regression_output_loss: 0.7310 - val_classification_output_loss: 0.0211 - val_ordinal_regression_output_loss: 0.0660 - val_regression_output_accuracy: 0.5256 - val_classification_output_accuracy: 0.7642 - val_ordinal_regression_output_accuracy: 0.7614\n","Epoch 20/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9175 - regression_output_loss: 0.8022 - classification_output_loss: 0.0276 - ordinal_regression_output_loss: 0.0877 - regression_output_accuracy: 0.4596 - classification_output_accuracy: 0.7054 - ordinal_regression_output_accuracy: 0.7319 - val_loss: 0.7592 - val_regression_output_loss: 0.6688 - val_classification_output_loss: 0.0239 - val_ordinal_regression_output_loss: 0.0665 - val_regression_output_accuracy: 0.5455 - val_classification_output_accuracy: 0.7472 - val_ordinal_regression_output_accuracy: 0.7926\n","Epoch 21/45\n","205/205 [==============================] - 23s 111ms/step - loss: 0.8721 - regression_output_loss: 0.7654 - classification_output_loss: 0.0240 - ordinal_regression_output_loss: 0.0827 - regression_output_accuracy: 0.4834 - classification_output_accuracy: 0.7301 - ordinal_regression_output_accuracy: 0.7350 - val_loss: 0.8070 - val_regression_output_loss: 0.7212 - val_classification_output_loss: 0.0201 - val_ordinal_regression_output_loss: 0.0657 - val_regression_output_accuracy: 0.5256 - val_classification_output_accuracy: 0.7528 - val_ordinal_regression_output_accuracy: 0.7784\n","Epoch 22/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.9442 - regression_output_loss: 0.8244 - classification_output_loss: 0.0300 - ordinal_regression_output_loss: 0.0898 - regression_output_accuracy: 0.4684 - classification_output_accuracy: 0.7121 - ordinal_regression_output_accuracy: 0.7402 - val_loss: 0.7761 - val_regression_output_loss: 0.6872 - val_classification_output_loss: 0.0204 - val_ordinal_regression_output_loss: 0.0685 - val_regression_output_accuracy: 0.5369 - val_classification_output_accuracy: 0.7528 - val_ordinal_regression_output_accuracy: 0.7784\n","Epoch 23/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.9539 - regression_output_loss: 0.8340 - classification_output_loss: 0.0280 - ordinal_regression_output_loss: 0.0919 - regression_output_accuracy: 0.4605 - classification_output_accuracy: 0.7109 - ordinal_regression_output_accuracy: 0.7280 - val_loss: 0.7283 - val_regression_output_loss: 0.6360 - val_classification_output_loss: 0.0228 - val_ordinal_regression_output_loss: 0.0695 - val_regression_output_accuracy: 0.5455 - val_classification_output_accuracy: 0.7812 - val_ordinal_regression_output_accuracy: 0.7784\n","Epoch 24/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.9206 - regression_output_loss: 0.8045 - classification_output_loss: 0.0285 - ordinal_regression_output_loss: 0.0876 - regression_output_accuracy: 0.4684 - classification_output_accuracy: 0.7225 - ordinal_regression_output_accuracy: 0.7396 - val_loss: 0.7884 - val_regression_output_loss: 0.7033 - val_classification_output_loss: 0.0206 - val_ordinal_regression_output_loss: 0.0645 - val_regression_output_accuracy: 0.5540 - val_classification_output_accuracy: 0.7756 - val_ordinal_regression_output_accuracy: 0.7869\n","Epoch 25/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.9461 - regression_output_loss: 0.8313 - classification_output_loss: 0.0272 - ordinal_regression_output_loss: 0.0876 - regression_output_accuracy: 0.4605 - classification_output_accuracy: 0.7106 - ordinal_regression_output_accuracy: 0.7344 - val_loss: 0.7213 - val_regression_output_loss: 0.6355 - val_classification_output_loss: 0.0207 - val_ordinal_regression_output_loss: 0.0652 - val_regression_output_accuracy: 0.5085 - val_classification_output_accuracy: 0.7670 - val_ordinal_regression_output_accuracy: 0.7784\n","Epoch 26/45\n","205/205 [==============================] - 22s 106ms/step - loss: 0.8983 - regression_output_loss: 0.7847 - classification_output_loss: 0.0278 - ordinal_regression_output_loss: 0.0859 - regression_output_accuracy: 0.4727 - classification_output_accuracy: 0.7200 - ordinal_regression_output_accuracy: 0.7359 - val_loss: 0.7826 - val_regression_output_loss: 0.6938 - val_classification_output_loss: 0.0204 - val_ordinal_regression_output_loss: 0.0684 - val_regression_output_accuracy: 0.5455 - val_classification_output_accuracy: 0.7585 - val_ordinal_regression_output_accuracy: 0.7443\n","Epoch 27/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.8899 - regression_output_loss: 0.7769 - classification_output_loss: 0.0264 - ordinal_regression_output_loss: 0.0866 - regression_output_accuracy: 0.4718 - classification_output_accuracy: 0.7203 - ordinal_regression_output_accuracy: 0.7237 - val_loss: 0.7969 - val_regression_output_loss: 0.7028 - val_classification_output_loss: 0.0230 - val_ordinal_regression_output_loss: 0.0711 - val_regression_output_accuracy: 0.5312 - val_classification_output_accuracy: 0.7614 - val_ordinal_regression_output_accuracy: 0.7898\n","Epoch 28/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.9341 - regression_output_loss: 0.8128 - classification_output_loss: 0.0296 - ordinal_regression_output_loss: 0.0918 - regression_output_accuracy: 0.4486 - classification_output_accuracy: 0.7133 - ordinal_regression_output_accuracy: 0.7344 - val_loss: 0.7504 - val_regression_output_loss: 0.6625 - val_classification_output_loss: 0.0211 - val_ordinal_regression_output_loss: 0.0669 - val_regression_output_accuracy: 0.5000 - val_classification_output_accuracy: 0.7642 - val_ordinal_regression_output_accuracy: 0.8040\n","Epoch 29/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.9052 - regression_output_loss: 0.7890 - classification_output_loss: 0.0279 - ordinal_regression_output_loss: 0.0883 - regression_output_accuracy: 0.4681 - classification_output_accuracy: 0.7213 - ordinal_regression_output_accuracy: 0.7347 - val_loss: 0.6777 - val_regression_output_loss: 0.5914 - val_classification_output_loss: 0.0197 - val_ordinal_regression_output_loss: 0.0665 - val_regression_output_accuracy: 0.5852 - val_classification_output_accuracy: 0.7841 - val_ordinal_regression_output_accuracy: 0.8040\n","Epoch 30/45\n","205/205 [==============================] - 22s 106ms/step - loss: 0.9163 - regression_output_loss: 0.8017 - classification_output_loss: 0.0270 - ordinal_regression_output_loss: 0.0876 - regression_output_accuracy: 0.4623 - classification_output_accuracy: 0.7167 - ordinal_regression_output_accuracy: 0.7380 - val_loss: 0.7939 - val_regression_output_loss: 0.7115 - val_classification_output_loss: 0.0187 - val_ordinal_regression_output_loss: 0.0638 - val_regression_output_accuracy: 0.5057 - val_classification_output_accuracy: 0.7585 - val_ordinal_regression_output_accuracy: 0.7926\n","Epoch 31/45\n","205/205 [==============================] - 22s 106ms/step - loss: 0.9158 - regression_output_loss: 0.8011 - classification_output_loss: 0.0268 - ordinal_regression_output_loss: 0.0879 - regression_output_accuracy: 0.4684 - classification_output_accuracy: 0.7121 - ordinal_regression_output_accuracy: 0.7341 - val_loss: 0.7617 - val_regression_output_loss: 0.6747 - val_classification_output_loss: 0.0208 - val_ordinal_regression_output_loss: 0.0663 - val_regression_output_accuracy: 0.5369 - val_classification_output_accuracy: 0.7670 - val_ordinal_regression_output_accuracy: 0.8011\n","Epoch 32/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.9152 - regression_output_loss: 0.7972 - classification_output_loss: 0.0283 - ordinal_regression_output_loss: 0.0897 - regression_output_accuracy: 0.4706 - classification_output_accuracy: 0.7075 - ordinal_regression_output_accuracy: 0.7426 - val_loss: 0.8459 - val_regression_output_loss: 0.7625 - val_classification_output_loss: 0.0198 - val_ordinal_regression_output_loss: 0.0636 - val_regression_output_accuracy: 0.5511 - val_classification_output_accuracy: 0.7386 - val_ordinal_regression_output_accuracy: 0.7869\n","Epoch 33/45\n","205/205 [==============================] - 21s 105ms/step - loss: 0.8844 - regression_output_loss: 0.7686 - classification_output_loss: 0.0282 - ordinal_regression_output_loss: 0.0876 - regression_output_accuracy: 0.4754 - classification_output_accuracy: 0.7161 - ordinal_regression_output_accuracy: 0.7307 - val_loss: 0.7242 - val_regression_output_loss: 0.6456 - val_classification_output_loss: 0.0179 - val_ordinal_regression_output_loss: 0.0607 - val_regression_output_accuracy: 0.5483 - val_classification_output_accuracy: 0.7898 - val_ordinal_regression_output_accuracy: 0.7955\n","Epoch 34/45\n","205/205 [==============================] - 21s 102ms/step - loss: 0.9385 - regression_output_loss: 0.8227 - classification_output_loss: 0.0281 - ordinal_regression_output_loss: 0.0876 - regression_output_accuracy: 0.4675 - classification_output_accuracy: 0.7133 - ordinal_regression_output_accuracy: 0.7341 - val_loss: 0.7834 - val_regression_output_loss: 0.6940 - val_classification_output_loss: 0.0233 - val_ordinal_regression_output_loss: 0.0660 - val_regression_output_accuracy: 0.5369 - val_classification_output_accuracy: 0.7500 - val_ordinal_regression_output_accuracy: 0.8097\n","Epoch 35/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.9210 - regression_output_loss: 0.8037 - classification_output_loss: 0.0284 - ordinal_regression_output_loss: 0.0888 - regression_output_accuracy: 0.4645 - classification_output_accuracy: 0.7255 - ordinal_regression_output_accuracy: 0.7353 - val_loss: 0.8124 - val_regression_output_loss: 0.7216 - val_classification_output_loss: 0.0249 - val_ordinal_regression_output_loss: 0.0659 - val_regression_output_accuracy: 0.5426 - val_classification_output_accuracy: 0.7358 - val_ordinal_regression_output_accuracy: 0.8040\n","Epoch 36/45\n","205/205 [==============================] - 23s 110ms/step - loss: 0.8832 - regression_output_loss: 0.7714 - classification_output_loss: 0.0270 - ordinal_regression_output_loss: 0.0848 - regression_output_accuracy: 0.4794 - classification_output_accuracy: 0.7060 - ordinal_regression_output_accuracy: 0.7426 - val_loss: 0.8174 - val_regression_output_loss: 0.7309 - val_classification_output_loss: 0.0199 - val_ordinal_regression_output_loss: 0.0667 - val_regression_output_accuracy: 0.4830 - val_classification_output_accuracy: 0.7585 - val_ordinal_regression_output_accuracy: 0.8040\n","Epoch 37/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.9531 - regression_output_loss: 0.8289 - classification_output_loss: 0.0307 - ordinal_regression_output_loss: 0.0935 - regression_output_accuracy: 0.4617 - classification_output_accuracy: 0.7078 - ordinal_regression_output_accuracy: 0.7286 - val_loss: 0.7781 - val_regression_output_loss: 0.6924 - val_classification_output_loss: 0.0208 - val_ordinal_regression_output_loss: 0.0649 - val_regression_output_accuracy: 0.5256 - val_classification_output_accuracy: 0.7642 - val_ordinal_regression_output_accuracy: 0.7898\n","Epoch 38/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9161 - regression_output_loss: 0.7994 - classification_output_loss: 0.0278 - ordinal_regression_output_loss: 0.0889 - regression_output_accuracy: 0.4611 - classification_output_accuracy: 0.7127 - ordinal_regression_output_accuracy: 0.7307 - val_loss: 0.7974 - val_regression_output_loss: 0.7029 - val_classification_output_loss: 0.0240 - val_ordinal_regression_output_loss: 0.0705 - val_regression_output_accuracy: 0.5455 - val_classification_output_accuracy: 0.7528 - val_ordinal_regression_output_accuracy: 0.8068\n","Epoch 39/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.9397 - regression_output_loss: 0.8241 - classification_output_loss: 0.0282 - ordinal_regression_output_loss: 0.0874 - regression_output_accuracy: 0.4675 - classification_output_accuracy: 0.7161 - ordinal_regression_output_accuracy: 0.7310 - val_loss: 0.7610 - val_regression_output_loss: 0.6800 - val_classification_output_loss: 0.0182 - val_ordinal_regression_output_loss: 0.0628 - val_regression_output_accuracy: 0.5085 - val_classification_output_accuracy: 0.7812 - val_ordinal_regression_output_accuracy: 0.7756\n","Epoch 40/45\n","205/205 [==============================] - 22s 108ms/step - loss: 0.9404 - regression_output_loss: 0.8246 - classification_output_loss: 0.0285 - ordinal_regression_output_loss: 0.0874 - regression_output_accuracy: 0.4712 - classification_output_accuracy: 0.7115 - ordinal_regression_output_accuracy: 0.7377 - val_loss: 0.7608 - val_regression_output_loss: 0.6702 - val_classification_output_loss: 0.0215 - val_ordinal_regression_output_loss: 0.0691 - val_regression_output_accuracy: 0.5369 - val_classification_output_accuracy: 0.7500 - val_ordinal_regression_output_accuracy: 0.8125\n","Epoch 41/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9346 - regression_output_loss: 0.8165 - classification_output_loss: 0.0292 - ordinal_regression_output_loss: 0.0889 - regression_output_accuracy: 0.4626 - classification_output_accuracy: 0.7136 - ordinal_regression_output_accuracy: 0.7289 - val_loss: 0.8094 - val_regression_output_loss: 0.7259 - val_classification_output_loss: 0.0179 - val_ordinal_regression_output_loss: 0.0656 - val_regression_output_accuracy: 0.5256 - val_classification_output_accuracy: 0.7955 - val_ordinal_regression_output_accuracy: 0.7869\n","Epoch 42/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.8941 - regression_output_loss: 0.7847 - classification_output_loss: 0.0261 - ordinal_regression_output_loss: 0.0833 - regression_output_accuracy: 0.4654 - classification_output_accuracy: 0.7042 - ordinal_regression_output_accuracy: 0.7335 - val_loss: 0.7479 - val_regression_output_loss: 0.6661 - val_classification_output_loss: 0.0183 - val_ordinal_regression_output_loss: 0.0635 - val_regression_output_accuracy: 0.5426 - val_classification_output_accuracy: 0.7812 - val_ordinal_regression_output_accuracy: 0.7983\n","Epoch 43/45\n","205/205 [==============================] - 23s 110ms/step - loss: 0.9174 - regression_output_loss: 0.8016 - classification_output_loss: 0.0281 - ordinal_regression_output_loss: 0.0877 - regression_output_accuracy: 0.4721 - classification_output_accuracy: 0.7161 - ordinal_regression_output_accuracy: 0.7267 - val_loss: 0.7674 - val_regression_output_loss: 0.6820 - val_classification_output_loss: 0.0211 - val_ordinal_regression_output_loss: 0.0644 - val_regression_output_accuracy: 0.5284 - val_classification_output_accuracy: 0.7898 - val_ordinal_regression_output_accuracy: 0.8011\n","Epoch 44/45\n","205/205 [==============================] - 22s 109ms/step - loss: 0.9115 - regression_output_loss: 0.7961 - classification_output_loss: 0.0276 - ordinal_regression_output_loss: 0.0878 - regression_output_accuracy: 0.4785 - classification_output_accuracy: 0.7145 - ordinal_regression_output_accuracy: 0.7371 - val_loss: 0.7752 - val_regression_output_loss: 0.6901 - val_classification_output_loss: 0.0221 - val_ordinal_regression_output_loss: 0.0630 - val_regression_output_accuracy: 0.5284 - val_classification_output_accuracy: 0.7614 - val_ordinal_regression_output_accuracy: 0.7926\n","Epoch 45/45\n","205/205 [==============================] - 22s 107ms/step - loss: 0.9151 - regression_output_loss: 0.8000 - classification_output_loss: 0.0282 - ordinal_regression_output_loss: 0.0870 - regression_output_accuracy: 0.4687 - classification_output_accuracy: 0.7088 - ordinal_regression_output_accuracy: 0.7310 - val_loss: 0.7259 - val_regression_output_loss: 0.6379 - val_classification_output_loss: 0.0215 - val_ordinal_regression_output_loss: 0.0665 - val_regression_output_accuracy: 0.5483 - val_classification_output_accuracy: 0.7585 - val_ordinal_regression_output_accuracy: 0.7983\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FLvUl42nDmRM","executionInfo":{"status":"ok","timestamp":1601516070179,"user_tz":300,"elapsed":1009,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"0aaf7574-a2da-425b-8d4d-07ea73bc4f3b","colab":{"base_uri":"https://localhost:8080/","height":346}},"source":["plt.figure(figsize=(15,5))\n","plt.plot(history['regression_output_loss'])\n","plt.plot(history['val_regression_output_loss'])\n","plt.title('Regression Model Loss - Main Training')\n","plt.ylabel('Loss (MSE)')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Validation'], loc='best')\n","plt.xticks(range(1,46))\n","plt.gca().ticklabel_format(axis='both', style='plain', useOffset=False)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"nJzOsVvcDuxc","executionInfo":{"status":"ok","timestamp":1601516076453,"user_tz":300,"elapsed":1395,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"603c11dd-acbf-4522-afb8-413a5957b9fc","colab":{"base_uri":"https://localhost:8080/","height":346}},"source":["plt.figure(figsize=(15,5))\n","plt.plot(history['regression_output_loss'])\n","plt.plot(history['val_regression_output_loss'])\n","plt.title('Regression Model Loss - Main Training')\n","plt.ylabel('Loss (MSE)')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Validation'], loc='best')\n","plt.xticks(range(1,46))\n","plt.gca().ticklabel_format(axis='both', style='plain', useOffset=False)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"68jd1Sk9D08S","executionInfo":{"status":"ok","timestamp":1601516084942,"user_tz":300,"elapsed":826,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"984e9981-7cb0-4324-c834-22d2aa9db92f","colab":{"base_uri":"https://localhost:8080/","height":350}},"source":["plt.figure(figsize=(15,5))\n","plt.plot(history['ordinal_regression_output_loss'])\n","plt.plot(history['val_ordinal_regression_output_loss'])\n","plt.title('Ordinal Regression Model Loss - Main Training')\n","plt.ylabel('Loss (Binary Focal Loss)')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Validation'], loc='best')\n","plt.xticks(range(1,46))\n","plt.gca().ticklabel_format(axis='both', style='plain', useOffset=False)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Mda6Fd6VzFR0"},"source":["model.save(\"/content/gdrive/My Drive/tesis2/post_training.h5\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aLDI_XLTEOBZ","executionInfo":{"status":"ok","timestamp":1601601526371,"user_tz":300,"elapsed":1163,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"a396e6c5-74c8-4a49-aaef-19ef0e2bdbd1","colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["complete_datagen = ImageDataGenerator(rescale=1./255, rotation_range=360,brightness_range=[0.5, 1.5],\n","                                     zoom_range=[1, 1.2],zca_whitening=True,horizontal_flip=True,\n","                                     vertical_flip=True,fill_mode='constant')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:337: UserWarning: This ImageDataGenerator specifies `zca_whitening`, which overrides setting of `featurewise_center`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"PVaQUqNxEQgi","executionInfo":{"status":"ok","timestamp":1601601727596,"user_tz":300,"elapsed":2543,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"c9cb1fef-5e30-4136-9e5d-851da0e52a6d","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["complete_generator = complete_datagen.flow(x_train1, y_train1, batch_size=1, seed=2020)\n","\n","test_generator = complete_datagen.flow(x_val1,y_val1,batch_size=1, seed = 2020)\n","\n","STEP_SIZE_COMPLETE = complete_generator.n//complete_generator.batch_size\n","print(complete_generator.n)\n","\n","STEP_SIZE_TEST = test_generator.n//test_generator.batch_size\n","print(test_generator.n)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["3295\n","367\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Z0cTRQY6Hv3j"},"source":["from keras.models import load_model"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SwCzz32DHJ1j"},"source":["model = load_model(\"/content/gdrive/My Drive/tesis2/post_training.h5\",custom_objects={'categorical_focal_loss_fixed':categorical_focal_loss(alpha=.25, gamma=2),\n","                                                            'binary_focal_loss_fixed' : binary_focal_loss(alpha=.25, gamma=2)})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_HkjROeCIN6q","executionInfo":{"status":"ok","timestamp":1601601756719,"user_tz":300,"elapsed":25548,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"21247489-a5b6-44d1-94d2-6a055f18f975","colab":{"base_uri":"https://localhost:8080/","height":173}},"source":["train_preds = model.predict_generator(complete_generator, steps=STEP_SIZE_COMPLETE,verbose = 1)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From <ipython-input-109-1cc9da699946>:1: Model.predict_generator (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use Model.predict, which supports generators.\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:720: UserWarning: This ImageDataGenerator specifies `featurewise_center`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n","/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:739: UserWarning: This ImageDataGenerator specifies `zca_whitening`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"},{"output_type":"stream","text":["3295/3295 [==============================] - 23s 7ms/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KtNq_V0HIa_S","executionInfo":{"status":"ok","timestamp":1601602023624,"user_tz":300,"elapsed":3916,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"fcecfddc-6052-4a7a-f514-63d19b9bb19c","colab":{"base_uri":"https://localhost:8080/","height":122}},"source":["test_preds = model.predict_generator(test_generator, steps=STEP_SIZE_TEST,verbose = 1)"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" 16/367 [>.............................] - ETA: 2s"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:720: UserWarning: This ImageDataGenerator specifies `featurewise_center`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n","/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/image_data_generator.py:739: UserWarning: This ImageDataGenerator specifies `zca_whitening`, but it hasn't been fit on any training data. Fit it first by calling `.fit(numpy_data)`.\n","  warnings.warn('This ImageDataGenerator specifies '\n"],"name":"stderr"},{"output_type":"stream","text":["367/367 [==============================] - 3s 7ms/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"IVGJ0hKRJQg5","executionInfo":{"status":"ok","timestamp":1601602033403,"user_tz":300,"elapsed":5199,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"8e0f3f7e-9650-46fa-a094-1346471c34fb","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["print(train_preds[0].shape,train_preds[1].shape,train_preds[2].shape)\n","\n","train_output_regression = np.array(train_preds[0]).reshape(-1,1)\n","train_output_classification = np.array(np.argmax(train_preds[1],axis = -1)).reshape(-1,1)\n","train_output_ordinal_regression = np.array(np.sum(train_preds[2],axis = -1)).reshape(-1,1)\n","\n","print(train_output_regression.shape,train_output_classification.shape,train_output_ordinal_regression.shape)\n","X_train = np.hstack((train_output_regression,train_output_classification,train_output_ordinal_regression))\n","print(X_train.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(3295, 1) (3295, 5) (3295, 5)\n","(3295, 1) (3295, 1) (3295, 1)\n","(3295, 3)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nuPh6wzBJWqm","executionInfo":{"status":"ok","timestamp":1601602134131,"user_tz":300,"elapsed":591,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"2c8bf2de-cc58-4717-c980-9428e1154a71","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["print(test_preds[0].shape,test_preds[1].shape,test_preds[2].shape)\n","\n","test_output_regression = np.array(test_preds[0]).reshape(-1,1)\n","test_output_classification = np.array(np.argmax(test_preds[1],axis = -1)).reshape(-1,1)\n","test_output_ordinal_regression = np.array(np.sum(test_preds[2],axis = -1)).reshape(-1,1)\n","\n","print(test_output_regression.shape,test_output_classification.shape,test_output_ordinal_regression.shape)\n","X_test = np.hstack((test_output_regression,test_output_classification,test_output_ordinal_regression))\n","print(X_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(367, 1) (367, 5) (367, 5)\n","(367, 1) (367, 1) (367, 1)\n","(367, 3)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6iHnZlplKvuK","executionInfo":{"status":"ok","timestamp":1601602144192,"user_tz":300,"elapsed":5817,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"35c0f3fb-790a-45a4-b84b-c23f90cb24f3","colab":{"base_uri":"https://localhost:8080/","height":187}},"source":["model_post = Sequential()\n","model_post.add(Dense(1, activation='linear', input_shape=(3,)))\n","model_post.compile(optimizer=optimizers.SGD(lr=LEARNING_RATE), loss='mean_squared_error', metrics=['mean_squared_error'])\n","model_post.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense_3 (Dense)              (None, 1)                 4         \n","=================================================================\n","Total params: 4\n","Trainable params: 4\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3U_7mbKBSnvP"},"source":["y_train = [np.argmax(pred) for pred in y_train1]\n","y_test = [np.argmax(pred) for pred in y_val1]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QZDbmhWQUClT"},"source":["y_train2=np.array(y_train1)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yUbsTDDFUapz"},"source":["y_test2 = np.array(y_val1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PFt-3FhxVZfO"},"source":["y_train = [np.argmax(pred) for pred in y_train2]\n","y_test = [np.argmax(pred) for pred in y_test2]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JZduPDxXCrDd","executionInfo":{"status":"ok","timestamp":1601602376221,"user_tz":300,"elapsed":1338,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"5caf2804-00dc-4504-8b47-7f6dc50fc0cc","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(X_test[21])\n","print(y_test[21])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[0.04407577 0.         1.        ]\n","2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WBfcWnGVLGKY","executionInfo":{"status":"ok","timestamp":1601602618202,"user_tz":300,"elapsed":232102,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"db5434a1-3ee7-4252-8717-fbd608349bc6","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["history = model_post.fit(X_train,np.array(y_train),\n","                         batch_size=1,\n","                         epochs=50,\n","                         verbose=1,\n","                         validation_data = (X_test,np.array(y_test)))\n","\n","model_post.save(\"model_post_training.h5\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.8099 - mean_squared_error: 1.8099 - val_loss: 1.5559 - val_mean_squared_error: 1.5559\n","Epoch 2/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7029 - mean_squared_error: 1.7029 - val_loss: 1.5858 - val_mean_squared_error: 1.5858\n","Epoch 3/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7019 - mean_squared_error: 1.7019 - val_loss: 1.5640 - val_mean_squared_error: 1.5640\n","Epoch 4/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7021 - mean_squared_error: 1.7021 - val_loss: 1.5910 - val_mean_squared_error: 1.5910\n","Epoch 5/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7012 - mean_squared_error: 1.7012 - val_loss: 1.5744 - val_mean_squared_error: 1.5744\n","Epoch 6/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7028 - mean_squared_error: 1.7028 - val_loss: 1.5824 - val_mean_squared_error: 1.5824\n","Epoch 7/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7015 - mean_squared_error: 1.7015 - val_loss: 1.5870 - val_mean_squared_error: 1.5870\n","Epoch 8/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7020 - mean_squared_error: 1.7020 - val_loss: 1.5696 - val_mean_squared_error: 1.5696\n","Epoch 9/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7012 - mean_squared_error: 1.7012 - val_loss: 1.5887 - val_mean_squared_error: 1.5887\n","Epoch 10/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7016 - mean_squared_error: 1.7016 - val_loss: 1.5645 - val_mean_squared_error: 1.5645\n","Epoch 11/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7018 - mean_squared_error: 1.7018 - val_loss: 1.5820 - val_mean_squared_error: 1.5820\n","Epoch 12/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7016 - mean_squared_error: 1.7016 - val_loss: 1.5609 - val_mean_squared_error: 1.5609\n","Epoch 13/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7018 - mean_squared_error: 1.7018 - val_loss: 1.5775 - val_mean_squared_error: 1.5775\n","Epoch 14/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7006 - mean_squared_error: 1.7006 - val_loss: 1.5608 - val_mean_squared_error: 1.5608\n","Epoch 15/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7006 - mean_squared_error: 1.7006 - val_loss: 1.5550 - val_mean_squared_error: 1.5550\n","Epoch 16/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7019 - mean_squared_error: 1.7019 - val_loss: 1.5597 - val_mean_squared_error: 1.5597\n","Epoch 17/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7009 - mean_squared_error: 1.7009 - val_loss: 1.5715 - val_mean_squared_error: 1.5715\n","Epoch 18/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7025 - mean_squared_error: 1.7025 - val_loss: 1.5638 - val_mean_squared_error: 1.5638\n","Epoch 19/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7005 - mean_squared_error: 1.7005 - val_loss: 1.5577 - val_mean_squared_error: 1.5577\n","Epoch 20/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7008 - mean_squared_error: 1.7008 - val_loss: 1.5678 - val_mean_squared_error: 1.5678\n","Epoch 21/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7011 - mean_squared_error: 1.7011 - val_loss: 1.5921 - val_mean_squared_error: 1.5921\n","Epoch 22/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7017 - mean_squared_error: 1.7017 - val_loss: 1.5856 - val_mean_squared_error: 1.5856\n","Epoch 23/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7017 - mean_squared_error: 1.7017 - val_loss: 1.5946 - val_mean_squared_error: 1.5946\n","Epoch 24/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7019 - mean_squared_error: 1.7019 - val_loss: 1.5889 - val_mean_squared_error: 1.5889\n","Epoch 25/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7003 - mean_squared_error: 1.7003 - val_loss: 1.5616 - val_mean_squared_error: 1.5616\n","Epoch 26/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7022 - mean_squared_error: 1.7022 - val_loss: 1.5769 - val_mean_squared_error: 1.5769\n","Epoch 27/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7016 - mean_squared_error: 1.7016 - val_loss: 1.5936 - val_mean_squared_error: 1.5936\n","Epoch 28/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7008 - mean_squared_error: 1.7008 - val_loss: 1.6012 - val_mean_squared_error: 1.6012\n","Epoch 29/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.6974 - mean_squared_error: 1.6974 - val_loss: 1.5585 - val_mean_squared_error: 1.5585\n","Epoch 30/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7012 - mean_squared_error: 1.7012 - val_loss: 1.6091 - val_mean_squared_error: 1.6091\n","Epoch 31/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7012 - mean_squared_error: 1.7012 - val_loss: 1.5671 - val_mean_squared_error: 1.5671\n","Epoch 32/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7006 - mean_squared_error: 1.7006 - val_loss: 1.5651 - val_mean_squared_error: 1.5651\n","Epoch 33/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7005 - mean_squared_error: 1.7005 - val_loss: 1.5612 - val_mean_squared_error: 1.5612\n","Epoch 34/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7012 - mean_squared_error: 1.7012 - val_loss: 1.5703 - val_mean_squared_error: 1.5703\n","Epoch 35/50\n","3295/3295 [==============================] - 6s 2ms/step - loss: 1.7008 - mean_squared_error: 1.7008 - val_loss: 1.5611 - val_mean_squared_error: 1.5611\n","Epoch 36/50\n","3295/3295 [==============================] - 6s 2ms/step - loss: 1.7019 - mean_squared_error: 1.7019 - val_loss: 1.6081 - val_mean_squared_error: 1.6081\n","Epoch 37/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7017 - mean_squared_error: 1.7017 - val_loss: 1.5783 - val_mean_squared_error: 1.5783\n","Epoch 38/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7014 - mean_squared_error: 1.7014 - val_loss: 1.5891 - val_mean_squared_error: 1.5891\n","Epoch 39/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7014 - mean_squared_error: 1.7014 - val_loss: 1.5845 - val_mean_squared_error: 1.5845\n","Epoch 40/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7009 - mean_squared_error: 1.7009 - val_loss: 1.5732 - val_mean_squared_error: 1.5732\n","Epoch 41/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7002 - mean_squared_error: 1.7002 - val_loss: 1.6040 - val_mean_squared_error: 1.6040\n","Epoch 42/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7016 - mean_squared_error: 1.7016 - val_loss: 1.5734 - val_mean_squared_error: 1.5734\n","Epoch 43/50\n","3295/3295 [==============================] - 4s 1ms/step - loss: 1.7016 - mean_squared_error: 1.7016 - val_loss: 1.5818 - val_mean_squared_error: 1.5818\n","Epoch 44/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7014 - mean_squared_error: 1.7014 - val_loss: 1.5733 - val_mean_squared_error: 1.5733\n","Epoch 45/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.6999 - mean_squared_error: 1.6999 - val_loss: 1.5730 - val_mean_squared_error: 1.5730\n","Epoch 46/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.6994 - mean_squared_error: 1.6994 - val_loss: 1.5781 - val_mean_squared_error: 1.5781\n","Epoch 47/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7011 - mean_squared_error: 1.7011 - val_loss: 1.5778 - val_mean_squared_error: 1.5778\n","Epoch 48/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7005 - mean_squared_error: 1.7005 - val_loss: 1.5617 - val_mean_squared_error: 1.5617\n","Epoch 49/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7016 - mean_squared_error: 1.7016 - val_loss: 1.5742 - val_mean_squared_error: 1.5742\n","Epoch 50/50\n","3295/3295 [==============================] - 5s 1ms/step - loss: 1.7016 - mean_squared_error: 1.7016 - val_loss: 1.5822 - val_mean_squared_error: 1.5822\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tV-1McvGQ2uF","executionInfo":{"status":"ok","timestamp":1601425298814,"user_tz":300,"elapsed":2097,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"29d365bb-f9eb-499a-f14c-7873d78fa7b9","colab":{"base_uri":"https://localhost:8080/","height":225}},"source":["plt.figure(figsize=(25,5))\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.title('Linear Regression Model Loss - Post Training (50 epochs)')\n","plt.ylabel('Loss (MSE)')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Validation'], loc='best')\n","plt.xticks(range(1,51))\n","plt.gca().ticklabel_format(axis='both', style='plain', useOffset=False)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1800x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"VSqHq4LqRAdB"},"source":["def classify(x):\n","    if x < 0.5:\n","        return 0\n","    elif x < 1.5:\n","        return 1\n","    elif x < 2.5:\n","        return 2\n","    elif x < 3.5:\n","        return 3\n","    return 4"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gGABhGDHRCvr","executionInfo":{"status":"ok","timestamp":1601602959990,"user_tz":300,"elapsed":3516,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"1d81edf7-eaa4-4815-cebd-9f15bfecfd89","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["train_labels = model_post.predict(X_train,batch_size=1,verbose = 1)\n","train_labels = np.apply_along_axis(classify, 1, train_labels)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["3295/3295 [==============================] - 3s 850us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"jI9uaEuYRIsn","executionInfo":{"status":"ok","timestamp":1601602962194,"user_tz":300,"elapsed":1076,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"0f93beb0-1f5b-45f4-d8d8-73bbb26e57bb","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["test_labels = model_post.predict(X_test,batch_size=1,verbose = 1)\n","test_labels = np.apply_along_axis(classify, 1, test_labels)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["367/367 [==============================] - 0s 861us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"W8ThbghOZ0K-"},"source":["from sklearn.metrics import confusion_matrix, cohen_kappa_score,accuracy_score"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"My-jobHcaul5"},"source":["import seaborn as sns"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"S5Li_dqURoWY"},"source":["def plot_conf_matrix(true,pred,classes):\n","    cf = confusion_matrix(true, pred)\n","    \n","    df_cm = pd.DataFrame(cf, range(len(classes)), range(len(classes)))\n","    plt.figure(figsize=(8,5.5))\n","    sns.set(font_scale=1.4)\n","    sns.heatmap(df_cm, annot=True, annot_kws={\"size\": 16},xticklabels = classes ,yticklabels = classes,fmt='g')\n","    #sns.heatmap(df_cm, annot=True, annot_kws={\"size\": 16})\n","    plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YSwaFANYRtEf","executionInfo":{"status":"ok","timestamp":1601602975764,"user_tz":300,"elapsed":1281,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"cc191625-5dab-41fa-c85d-0dfd0dcc17fe","colab":{"base_uri":"https://localhost:8080/","height":490}},"source":["labels = ['0 - No DR', '1 - Mild', '2 - Moderate', '3 - Severe', '4 - Proliferative DR']\n","plot_conf_matrix(y_train,train_labels,labels)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x396 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"ITWz1Oc1dDtm","executionInfo":{"status":"ok","timestamp":1601602981614,"user_tz":300,"elapsed":1106,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"c8aafbec-0ea9-4cb6-bc8d-71df2567859a","colab":{"base_uri":"https://localhost:8080/","height":409}},"source":["cnf_matrix = confusion_matrix(y_test, test_labels)\n","cnf_matrix_norm = cnf_matrix.astype('float') / cnf_matrix.sum(axis=1)[:, np.newaxis]\n","df_cm = pd.DataFrame(cnf_matrix_norm, index=labels, columns=labels)\n","plt.figure(figsize=(16, 7))\n","sns.heatmap(df_cm, annot=True, fmt='.2f', cmap=\"Blues\")\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1152x504 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"Kqsgvp9Keq4o","executionInfo":{"status":"ok","timestamp":1601602986699,"user_tz":300,"elapsed":1245,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"e76d93c9-93b6-4633-fb75-ec7a37838c29","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(\"Train Cohen Kappa score: %.3f\" % cohen_kappa_score(train_labels,np.array(y_train) , weights='quadratic'))\n","print(\"Train Accuracy score : %.3f\" % accuracy_score(np.array(y_train),train_labels))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Train Cohen Kappa score: 0.000\n","Train Accuracy score : 0.102\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LUnmDVOBer5b","executionInfo":{"status":"ok","timestamp":1601602990258,"user_tz":300,"elapsed":810,"user":{"displayName":"Jorge Diego Garcia Torres","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgUm411NCPxL0CyuKgBlBhJ9SxhXr8inmS25Nfq=s64","userId":"03990517325461913005"}},"outputId":"0a45af0d-7343-426a-bbb2-49d1d586dc64","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(\"Test Cohen Kappa score: %.3f\" % cohen_kappa_score(test_labels, np.array(y_test), weights='quadratic'))\n","print(\"Test Accuracy score : %.3f\" % accuracy_score(np.array(y_test),test_labels))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Test Cohen Kappa score: 0.000\n","Test Accuracy score : 0.095\n"],"name":"stdout"}]}]}